<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo</title>
    <url>/Hexo/</url>
    <content><![CDATA[<p>hexo 相关问题</p>
<span id="more"></span>

<div><div class="fold_hider"><div class="close hider_title">PDF</div></div><div class="fold">
<ul>
<li>想要pdf显示在文章中，需要在<code>_post</code>文件所在文件夹中创建与<code>.md</code>文档同名的文件夹，将pdf放在该文件夹中才能正确显示</li>
</ul>

</div></div>



<div><div class="fold_hider"><div class="close hider_title">QuickStart</div></div><div class="fold">
<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>

</div></div>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux</title>
    <url>/Linux/</url>
    <content><![CDATA[<p>一些Linux终端命令问题</p>
<span id="more"></span>

<h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">重启服务器：</span><br><span class="line">home -&gt; soft -&gt;tomcat8091 -&gt; bin</span><br><span class="line">./catalina.sh stop</span><br><span class="line">bin/catalina.sh stop</span><br><span class="line">ps -aux|grep java</span><br><span class="line">kill -9 线程号</span><br><span class="line">./catalina.sh stop</span><br><span class="line">./catalina.sh start</span><br><span class="line">tail -f logs/catalina.out</span><br></pre></td></tr></table></figure>

<p>service、model、dao都生成了jar文件，发布的时候直接覆盖原jar文件</p>
<h2 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h2><ul>
<li>保存并退出：esc -&gt; :wq</li>
<li>vim中按组合键：<code>ctrl+s</code> 处于假死状态（锁屏快捷键），按 <code>ctrl+q</code> 退出锁屏</li>
</ul>
]]></content>
      <categories>
        <category>Configuration</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Java_2022.07-09</title>
    <url>/Java_2022.07-09/</url>
    <content><![CDATA[<p>java 相关</p>
<span id="more"></span>

<h1 id="问题及解决"><a href="#问题及解决" class="headerlink" title="问题及解决"></a>问题及解决</h1><div><div class="fold_hider"><div class="close hider_title">前端问题及解决</div></div><div class="fold">
<ol>
<li><p>【Q】动态获取单选按钮点击结果</p>
<p>【A】用的jquery的radio的change事件：当元素的值发生改变时，会发生 change 事件，radio选择不同选项的时候恰巧是值发生改变。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;input[type=radio][name=productVirtual]&#x27;</span>).<span class="title function_">change</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">value</span> == <span class="string">&#x27;2&#x27;</span>) &#123;</span><br><span class="line">        $(<span class="string">&quot;.certificate&quot;</span>).<span class="title function_">show</span>()</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        $(<span class="string">&quot;.certificate&quot;</span>).<span class="title function_">hide</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


</li>
<li><p>【Q】layer.open 弹出框抖动</p>
<p>【A】<del>增加渐显字段</del> <font color="red">点击事件不要放在单选按钮改变事件里</font></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;#Ids&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    layer.<span class="title function_">open</span>(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;列表&#x27;</span>,</span><br><span class="line">        <span class="attr">anim</span>: <span class="number">5</span>,   <span class="comment">// 渐显，解决弹出层抖动问题</span></span><br><span class="line">        <span class="attr">shadeClose</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">shade</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">maxmin</span>: <span class="literal">true</span>, <span class="comment">//开启最大化最小化按钮</span></span><br><span class="line">        <span class="attr">area</span>: [<span class="string">&#x27;1090px&#x27;</span>, <span class="string">&#x27;500px&#x27;</span>],</span><br><span class="line">        <span class="attr">content</span>: url + $(<span class="string">&#x27;#Ids&#x27;</span>).<span class="title function_">val</span>(),</span><br><span class="line">        <span class="attr">btn</span>: [<span class="string">&#x27;确定&#x27;</span>, <span class="string">&#x27;关闭&#x27;</span>],</span><br><span class="line">        <span class="attr">yes</span>: <span class="keyword">function</span> (<span class="params">index, layero</span>) &#123; <span class="comment">//或者使用btn1</span></span><br><span class="line">            content = layero.<span class="title function_">find</span>(<span class="string">&quot;iframe&quot;</span>)[<span class="number">0</span>].<span class="property">contentWindow</span>.$(<span class="string">&#x27;#chooseIds&#x27;</span>).<span class="title function_">val</span>();</span><br><span class="line">            <span class="keyword">if</span> (content == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                layer.<span class="title function_">msg</span>(<span class="string">&quot;请先选中一行&quot;</span>);</span><br><span class="line">                $(<span class="string">&quot;#Ids&quot;</span>).<span class="title function_">val</span>(content);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $(<span class="string">&quot;#Ids&quot;</span>).<span class="title function_">val</span>(content);</span><br><span class="line">                layer.<span class="title function_">close</span>(index);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>【Q】对象变成了[object Object]</p>
<p>【A】说明该对象被强制类型转换为了字符串</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> a = &#123;&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a+<span class="string">&#x27;&#x27;</span>); <span class="comment">// [object Object]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> (a+<span class="string">&#x27;&#x27;</span>)); <span class="comment">// string</span></span><br><span class="line"><span class="comment">// 可是有的方法，确实只接受字符串参数，所以要将对象转化为对象字符串，进行传递</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(a)); <span class="comment">// &#123;&quot;text&quot;:123,&quot;id&quot;:123&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(a)); <span class="comment">// string</span></span><br><span class="line"><span class="comment">// 进入方法内部后再通过JSON.parse()方法转化为对象进行计算</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(a))); <span class="comment">//&#123; text: 123, id: 123 &#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(a))); <span class="comment">//object</span></span><br></pre></td></tr></table></figure></li>
</ol>

</div></div>



<div><div class="fold_hider"><div class="close hider_title">后端</div></div><div class="fold">
<ol>
<li><p>【Q】int与Integer的转换</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># 基本数值—&gt;包装对象</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用构造函数函数</span></span><br><span class="line"><span class="type">Integer</span> <span class="variable">i</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">4</span>);</span><br><span class="line"><span class="comment">//使用包装类中的valueOf方法</span></span><br><span class="line"><span class="type">Integer</span> <span class="variable">iii</span> <span class="operator">=</span> Integer.valueOf(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"># 包装对象—&gt;基本数值</span><br><span class="line"><span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> i.intValue();</span><br></pre></td></tr></table></figure>
</li>
<li><p>【Q】定时任务循环发放优惠券的时候，使用<code>save()</code>方法保存数据，然后<code>update()</code>更新数据，但是最后一次循环update的内容没有被更新进数据库</p>
<p>【A】Hibernate ：<code>persist()</code>以及<code>update()</code>方法只有事务执行<code>flush()</code>或者<code>commit()</code>方法，才将数据写入数据库。</p>
<p>【解决】在<code>update()</code>之后<code>flush()</code>一下。</p>
</li>
<li><p>【Q】提醒：<code>Value &#39;xxx&#39;  is always &#39;true&#39;</code> 。判断订单对象不为空的时候，idea提示该判断结果永远为true，但是如果该条数据是伪造的，订单就有可能为空。</p>
<p>【A】原因是因为判空操作应该在获取对象之后，第一次调用对象方法之前进行。但是我在获取订单对象之后，立马使用订单对象的get方法获取了商品对象，没有判订单的空，所以后面在商品判空之内再判订单就会出现这个错误，因为商品是根据订单里的字段获取得到的，商品存在订单一定存在。</p>
</li>
<li><p>【Q】报错：<code>Java.lang.NullPointerException</code>（空指针异常）。在发优惠券定时任务的时候，本地调试没有任何报错，但是上传到服务器后报空指针异常。</p>
<p>【A】调了半天发现在获取订单之后，调用订单对象方法之前的时候没有判空。所以在第二次调用对象方法之前判空的时候出现【Q3】，详情原因见【Q3】。</p>
<p>【未解决】：但是现在还不知道为什么本地测试没问题，正式发布到服务器上才报错。可能是服务器端的环境配置更严格？另外，订单对象不为空，并且取的字段值也不为空，为什么使用get方法会报这个错不是很明白。</p>
</li>
<li><p>【Q】导入新项目，maven reload的时候提示<code>java.lang.RuntimeException: org.codehaus.plexus.component.repository.exception.ComponentLookupExcept</code></p>
<p>【A】是maven版本太高不兼容的原因，降低版本就好了</p>
<p>​		  <a href="https://dlcdn.apache.org/maven/maven-3/">maven</a>  选择需要版本进入<code>/binaries</code>文件</p>
</li>
</ol>

</div></div>

<hr>

<h1 id="空指针专题"><a href="#空指针专题" class="headerlink" title="空指针专题"></a>空指针专题</h1><p>写代码时经常碰到<code>空指针异常：Java.lang.NullPointerException</code>。可以说是流水的业务逻辑，铁打的空指针异常，所以记录一下空指针相关，方便查阅。</p>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>空指针发生的原因：应用需要一个对象时却传入了null，包含以下几种情况：</p>
<ul>
<li>调用 null 对象的实例方法</li>
<li>访问或修改 null 对象的属性</li>
<li>获取值为 null 的数组的长度</li>
<li>访问或修改值为 null 的二维数组的列</li>
<li>把 null 当作 Throwable 对象抛出</li>
</ul>
<h2 id="出现场景"><a href="#出现场景" class="headerlink" title="出现场景"></a>出现场景</h2><p>NPE产生的场景有以下几种情况：</p>
<ol>
<li><p>返回类型为基本数据类型，return 包装数据类型的对象时，自动拆箱有可能产生NPE</p>
</li>
<li><p>数据库的查询结果可能为 null</p>
</li>
<li><p>集合里的元素即使 <code>isNotEmpty</code>，取出的数据元素也可能为 null</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// eg：如果在接收 hashMap 时，只简单判断了size是否为0</span></span><br><span class="line"><span class="comment">// 	   当hashMap中数据为 (&quot;key&quot;,null) 时，取出来的值依旧是null</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(HashMap&lt;String, String&gt; hashMap)</span> &#123;</span><br><span class="line">    <span class="comment">// 这个结果是 true</span></span><br><span class="line">    isNotEmpty(hashMap);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>远程调用返回对象时，一律要求进行空指针判断，防止 NPE</p>
</li>
<li><p>对于 Session 中获取的数据，建议进行 NPE 检查，避免空指针</p>
</li>
<li><p>级联调用 <code>obj.getA().getB().getC();</code>一连串调用，易产生 NPE</p>
</li>
<li><p>Object 的 equals 方法容易抛空指针异常，应使用常量或确定有值的对象来调用 equals</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">    <span class="comment">// 错误方法：</span></span><br><span class="line">    <span class="keyword">if</span> (student.getStudentName().equals(<span class="string">&quot;张三&quot;</span>)) &#123;</span><br><span class="line">        <span class="comment">// some code</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 正确方法：</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&quot;张三&quot;</span>.equals(student.getStudentName()))&#123;</span><br><span class="line">        <span class="comment">// some code</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="避免方法"><a href="#避免方法" class="headerlink" title="避免方法"></a>避免方法</h2><ol>
<li><p>使用 <code>Optional</code>，明确地告诉使用者结果可能为空</p>
</li>
<li><p>在调用对象方法前先判断对象是否为空</p>
</li>
<li><p>在判断对象是否为空时不要直接调用判空方法</p>
</li>
<li><p>尽量不使用<code>str.toString()</code>，改用&#96;String.valueOd()&#96;&#96;</p>
</li>
<li><p><code>&quot;test&quot;.equals(str)</code></p>
</li>
</ol>
<h3 id="对象判空技巧"><a href="#对象判空技巧" class="headerlink" title="对象判空技巧"></a>对象判空技巧</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">StringUtils.isNotBlank(str);</span><br><span class="line">StringUtils.isNotEmpty(str);</span><br><span class="line">object != <span class="literal">null</span>;</span><br></pre></td></tr></table></figure>





<hr>

<h1 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h1><hr>

<h1 id="Job定时任务"><a href="#Job定时任务" class="headerlink" title="Job定时任务"></a>Job定时任务</h1><p><strong>Quartz是一个强大的企业级任务调度框架，Spring中继承并简化了Quartz。</strong></p>
<p><strong>Spring中使用Quartz的3种方法:</strong></p>
<p><strong>MethodInvokingJobDetailFactoryBean</strong></p>
<p><strong>implements Job</strong></p>
<p><strong>extends QuartzJobBean）</strong></p>
<p>在Spring中配置Quartz步骤：</p>
<div><div class="fold_hider"><div class="close hider_title">step</div></div><div class="fold">
<ol>
<li><p>写一个需要做的定时任务类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.quartz;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QuartzJob</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">work</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;测试Quartz的定时任务&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在Spring配置文件 <code>quartz-job-config.xml</code> 中配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!-- 要调用的工作类 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;quartzJob&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.test.quartz.QuartzJob&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 定义调用对象和调用对象的方法 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jobtask&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 调用的类 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;targetObject&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;quartzJob&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 调用类中的方法 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;targetMethod&quot;</span> <span class="attr">value</span>=<span class="string">&quot;work&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 定义触发时间 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;doTime&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.scheduling.quartz.CronTriggerBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jobDetail&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;jobtask&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- cron表达式 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cronExpression&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10,15,20,25,30,35,40,45,50,55 * * * * ?&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 总管理类 如果将lazy-init=&#x27;false&#x27;那么容器启动就会执行调度程序  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;startQuertz&quot;</span> <span class="attr">lazy-init</span>=<span class="string">&quot;false&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;no&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.scheduling.quartz.SchedulerFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;triggers&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;doTime&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>测试程序</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Test start.&quot;</span>);</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;quartz-job-config.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//如果配置文件中将startQuertz bean的lazy-init设置为false 则不用实例化</span></span><br><span class="line">        <span class="comment">//context.getBean(&quot;startQuertz&quot;);</span></span><br><span class="line">        System.out.print(<span class="string">&quot;Test end..&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>

</div></div>

<h2 id="CRON-表达式"><a href="#CRON-表达式" class="headerlink" title="CRON 表达式"></a>CRON 表达式</h2><p>Quartz Cron表达式主要用于JAVA Spring定时任务中</p>
<p><a href="https://www.matools.com/cron">在线工具</a></p>
<div><div class="fold_hider"><div class="close hider_title">cron</div></div><div class="fold">
<h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><p>格式：<code>* * * * * * </code></p>
<p><code>{秒数、分钟、小时、日、月、周、年(可省略)}</code></p>
<p>单个域有多个取值时，使用半角逗号<code>,</code>隔开取值。每个域可以是确定的取值，也可以是具有逻辑意义的特殊字符。每个域最多支持一个前导零。</p>
<h3 id="域取值"><a href="#域取值" class="headerlink" title="域取值"></a>域取值</h3><p>下表为Cron表达式中六个域能够取的值以及支持的特殊字符。</p>
<table>
<thead>
<tr>
<th align="left">域</th>
<th align="left">是否必需</th>
<th align="left">取值范围</th>
<th align="left">特殊字符</th>
</tr>
</thead>
<tbody><tr>
<td align="left">秒</td>
<td align="left">是</td>
<td align="left">[0, 59]</td>
<td align="left">* , - &#x2F;</td>
</tr>
<tr>
<td align="left">分钟</td>
<td align="left">是</td>
<td align="left">[0, 59]</td>
<td align="left">* , - &#x2F;</td>
</tr>
<tr>
<td align="left">小时</td>
<td align="left">是</td>
<td align="left">[0, 23]</td>
<td align="left">* , - &#x2F;</td>
</tr>
<tr>
<td align="left">日期</td>
<td align="left">是</td>
<td align="left">[1, 31]</td>
<td align="left">* , - &#x2F; ? L W</td>
</tr>
<tr>
<td align="left">月份</td>
<td align="left">是</td>
<td align="left">[1, 12]或[JAN, DEC]</td>
<td align="left">* , - &#x2F;</td>
</tr>
<tr>
<td align="left">星期</td>
<td align="left">是</td>
<td align="left">[1, 7]或[MON, SUN]。若使用[1, 7]表达方式，<code>1</code>代表星期一，<code>7</code>代表星期日。</td>
<td align="left">* , - &#x2F; ? L #</td>
</tr>
<tr>
<td align="left">年</td>
<td align="left">否</td>
<td align="left">[当前年份，2099]</td>
<td align="left">* , - &#x2F;</td>
</tr>
</tbody></table>
<h3 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h3><p>Cron表达式中的每个域都支持一定数量的特殊字符，每个特殊字符有其特殊含义。</p>
<table>
<thead>
<tr>
<th align="left">特殊字符</th>
<th align="left">含义</th>
<th align="left">示例</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>*</code></td>
<td align="left">所有可能的值。</td>
<td align="left">在月域中，<code>*</code>表示每个月；在星期域中，<code>*</code>表示星期的每一天。</td>
</tr>
<tr>
<td align="left"><code>,</code></td>
<td align="left">列出枚举值。</td>
<td align="left">在分钟域中，<code>5,20</code>表示分别在5分钟和20分钟触发一次。</td>
</tr>
<tr>
<td align="left"><code>-</code></td>
<td align="left">范围。</td>
<td align="left">在分钟域中，<code>5-20</code>表示从5分钟到20分钟之间每隔一分钟触发一次。</td>
</tr>
<tr>
<td align="left"><code>/</code></td>
<td align="left">指定数值的增量。</td>
<td align="left">在分钟域中，<code>0/15</code>表示从第0分钟开始，每15分钟。在分钟域中<code>3/20</code>表示从第3分钟开始，每20分钟。</td>
</tr>
<tr>
<td align="left"><code>?</code></td>
<td align="left">不指定值，仅日期和星期域支持该字符。</td>
<td align="left">当日期或星期域其中之一被指定了值以后，为了避免冲突，需要将另一个域的值设为<code>?</code>。</td>
</tr>
<tr>
<td align="left"><code>L</code></td>
<td align="left">单词Last的首字母，表示最后一天，仅日期和星期域支持该字符。<strong>说明</strong> 指定<code>L</code>字符时，避免指定列表或者范围，否则，会导致逻辑问题。</td>
<td align="left">在日期域中，<code>L</code>表示某个月的最后一天。在星期域中，<code>L</code>表示一个星期的最后一天，也就是星期日（<code>SUN</code>）。如果在<code>L</code>前有具体的内容，例如，在星期域中的<code>6L</code>表示这个月的最后一个星期六。</td>
</tr>
<tr>
<td align="left"><code>W</code></td>
<td align="left">除周末以外的有效工作日，在离指定日期的最近的有效工作日触发事件。<code>W</code>字符寻找最近有效工作日时不会跨过当前月份，连用字符<code>LW</code>时表示为指定月份的最后一个工作日。</td>
<td align="left">在日期域中<code>5W</code>，如果5日是星期六，则将在最近的工作日星期五，即4日触发。如果5日是星期天，则将在最近的工作日星期一，即6日触发；如果5日在星期一到星期五中的一天，则就在5日触发。</td>
</tr>
<tr>
<td align="left"><code>#</code></td>
<td align="left">确定每个月第几个星期几，仅星期域支持该字符。</td>
<td align="left">在星期域中，<code>4#2</code>表示某月的第二个星期四。</td>
</tr>
</tbody></table>

</div></div>

<hr>

<h1 id="excel导出"><a href="#excel导出" class="headerlink" title="excel导出"></a>excel导出</h1><div><div class="fold_hider"><div class="close hider_title">常用组件及示例</div></div><div class="fold">
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 常用组件：</span><br><span class="line"></span><br><span class="line">HSSFWorkbook                      excel的文档对象</span><br><span class="line"></span><br><span class="line">HSSFSheet                         excel的表单</span><br><span class="line"></span><br><span class="line">HSSFRow                           excel的行</span><br><span class="line"></span><br><span class="line">HSSFCell                          excel的格子单元</span><br><span class="line"></span><br><span class="line">HSSFFont                          excel字体</span><br><span class="line"></span><br><span class="line">HSSFDataFormat                    日期格式</span><br><span class="line"></span><br><span class="line">HSSFHeader                        sheet头</span><br><span class="line"></span><br><span class="line">HSSFFooter                        sheet尾（只有打印的时候才能看到效果）</span><br><span class="line"></span><br><span class="line"># 样式：</span><br><span class="line"></span><br><span class="line">HSSFCellStyle                       cell样式</span><br><span class="line"></span><br><span class="line"># 辅助操作包括：</span><br><span class="line"></span><br><span class="line">HSSFDateUtil                        日期</span><br><span class="line"></span><br><span class="line">HSSFPrintSetup                      打印</span><br><span class="line"></span><br><span class="line">HSSFErrorConstants                  错误信息表</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建HSSFWorkbook对象</span></span><br><span class="line"><span class="type">HSSFWorkbook</span> <span class="variable">wb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HSSFWorkbook</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建HSSFSheet对象</span></span><br><span class="line"><span class="type">HSSFSheet</span> <span class="variable">sheet</span> <span class="operator">=</span> wb.createSheet(<span class="string">&quot;sheet0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建HSSFRow对象</span></span><br><span class="line"><span class="type">HSSFRow</span> <span class="variable">row</span> <span class="operator">=</span> sheet.createRow(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建HSSFCell对象</span></span><br><span class="line">HSSFCell cell=row.createCell(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置单元格的值</span></span><br><span class="line">cell.setCellValue(<span class="string">&quot;单元格中的中文&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出Excel文件</span></span><br><span class="line">FileOutputStream output=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;d:\\workbook.xls&quot;</span>);</span><br><span class="line">wkb.write(output);</span><br><span class="line">output.flush();</span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SuppressWarnings(&quot;deprecation&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;excel&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">excel</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span>&#123;</span><br><span class="line">    <span class="type">HSSFWorkbook</span> <span class="variable">workbook</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HSSFWorkbook</span>();<span class="comment">// 创建一个Excel文件   </span></span><br><span class="line">    <span class="type">HSSFSheet</span> <span class="variable">sheet</span> <span class="operator">=</span> workbook.createSheet(<span class="string">&quot;sheetname&quot;</span>);<span class="comment">// 创建一个Excel的Sheet</span></span><br><span class="line">    sheet.createFreezePane(<span class="number">1</span>, <span class="number">3</span>);<span class="comment">// 冻结   </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置表头的样式</span></span><br><span class="line">    <span class="type">HSSFFont</span> <span class="variable">headfont</span> <span class="operator">=</span> workbook.createFont();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置字体</span></span><br><span class="line">    headfont.setFontName(<span class="string">&quot;Times New Roman&quot;</span>);	<span class="comment">//字体格式</span></span><br><span class="line">    headfont.setFontHeightInPoints((<span class="type">short</span>) <span class="number">9</span>);<span class="comment">// 字体大小</span></span><br><span class="line">    headfont.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);<span class="comment">// 加粗</span></span><br><span class="line"></span><br><span class="line">    <span class="type">HSSFCellStyle</span> <span class="variable">headstyle</span> <span class="operator">=</span> workbook.createCellStyle();</span><br><span class="line">    headstyle.setFont(headfont);</span><br><span class="line">    headstyle.setAlignment(HSSFCellStyle.ALIGN_CENTER);<span class="comment">// 左右居中</span></span><br><span class="line">    headstyle.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);<span class="comment">// 上下居中</span></span><br><span class="line">    headstyle.setLocked(<span class="literal">true</span>);		<span class="comment">//是否锁定单元格</span></span><br><span class="line">    headstyle.setWrapText(<span class="literal">true</span>);	<span class="comment">// 自动换行</span></span><br><span class="line">    <span class="comment">//设置单元格百分比样式</span></span><br><span class="line">    <span class="type">HSSFCellStyle</span> <span class="variable">cellStyleRatio</span> <span class="operator">=</span> workbook.createCellStyle();</span><br><span class="line">    cellStyleRatio.setDataFormat(HSSFDataFormat.getBuiltinFormat(<span class="string">&quot;0.00%&quot;</span>));</span><br><span class="line">    <span class="comment">//设置单元格货币样式</span></span><br><span class="line">    <span class="type">HSSFCellStyle</span> <span class="variable">cellMoneyStyle</span> <span class="operator">=</span> workbook.createCellStyle();</span><br><span class="line">    HSSFDataFormat format= workbook.createDataFormat();</span><br><span class="line">    cellMoneyStyle.setDataFormat(format.getFormat(<span class="string">&quot;#,##0&quot;</span>));</span><br><span class="line">    <span class="comment">//设置单元格小数格式</span></span><br><span class="line">    <span class="type">HSSFCellStyle</span> <span class="variable">cellFlotStyle</span> <span class="operator">=</span> workbook.createCellStyle();</span><br><span class="line">    cellFlotStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat(<span class="string">&quot;0.00&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sheet样式   </span></span><br><span class="line">    <span class="type">HSSFCellStyle</span> <span class="variable">sheetStyle</span> <span class="operator">=</span> workbook.createCellStyle(); </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置列宽   </span></span><br><span class="line">    sheet.setColumnWidth(<span class="number">0</span>, <span class="number">1000</span>);   </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sheet样式   </span></span><br><span class="line">    <span class="type">HSSFCellStyle</span> <span class="variable">sheetStyle</span> <span class="operator">=</span> workbook.createCellStyle();   </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 背景色的设定   </span></span><br><span class="line">    sheetStyle.setFillBackgroundColor(HSSFColor.GREY_25_PERCENT.index); </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 前景色的设定   </span></span><br><span class="line">    sheetStyle.setFillForegroundColor(HSSFColor.GREY_25_PERCENT.index);   </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 填充模式   </span></span><br><span class="line">    sheetStyle.setFillPattern(HSSFCellStyle.FINE_DOTS);  </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置列的样式   </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">14</span>; i++) &#123;   </span><br><span class="line">        sheet.setDefaultColumnStyle((<span class="type">short</span>) i, sheetStyle);   </span><br><span class="line">    &#125;   </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置字体   </span></span><br><span class="line">    <span class="type">HSSFFont</span> <span class="variable">headfont</span> <span class="operator">=</span> workbook.createFont();   </span><br><span class="line">    headfont.setFontName(<span class="string">&quot;黑体&quot;</span>);   </span><br><span class="line">    headfont.setFontHeightInPoints((<span class="type">short</span>) <span class="number">22</span>);<span class="comment">// 字体大小   </span></span><br><span class="line">    headfont.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);<span class="comment">// 加粗   </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 另一个样式   </span></span><br><span class="line">    <span class="type">HSSFCellStyle</span> <span class="variable">headstyle</span> <span class="operator">=</span> workbook.createCellStyle();   </span><br><span class="line">    headstyle.setFont(headfont);   </span><br><span class="line">    headstyle.setAlignment(HSSFCellStyle.ALIGN_CENTER);<span class="comment">// 左右居中   </span></span><br><span class="line">    headstyle.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);<span class="comment">// 上下居中   </span></span><br><span class="line">    headstyle.setLocked(<span class="literal">true</span>);   </span><br><span class="line">    headstyle.setWrapText(<span class="literal">true</span>);<span class="comment">// 自动换行   </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 列头的样式   </span></span><br><span class="line">    <span class="type">HSSFCellStyle</span> <span class="variable">columnHeadStyle</span> <span class="operator">=</span> workbook.createCellStyle();   </span><br><span class="line">    columnHeadStyle.setFont(columnHeadFont);   </span><br><span class="line">    columnHeadStyle.setAlignment(HSSFCellStyle.ALIGN_CENTER);<span class="comment">// 左右居中   </span></span><br><span class="line">    columnHeadStyle.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);<span class="comment">// 上下居中   </span></span><br><span class="line">    columnHeadStyle.setLocked(<span class="literal">true</span>);   </span><br><span class="line">    columnHeadStyle.setWrapText(<span class="literal">true</span>);   </span><br><span class="line">    columnHeadStyle.setLeftBorderColor(HSSFColor.BLACK.index);<span class="comment">// 左边框的颜色   </span></span><br><span class="line">    columnHeadStyle.setBorderLeft((<span class="type">short</span>) <span class="number">1</span>);<span class="comment">// 边框的大小   </span></span><br><span class="line">    columnHeadStyle.setRightBorderColor(HSSFColor.BLACK.index);<span class="comment">// 右边框的颜色   </span></span><br><span class="line">    columnHeadStyle.setBorderRight((<span class="type">short</span>) <span class="number">1</span>);<span class="comment">// 边框的大小   </span></span><br><span class="line">    columnHeadStyle.setBorderBottom(HSSFCellStyle.BORDER_THIN); <span class="comment">// 设置单元格的边框为粗体   </span></span><br><span class="line">    columnHeadStyle.setBottomBorderColor(HSSFColor.BLACK.index); <span class="comment">// 设置单元格的边框颜色   </span></span><br><span class="line">    <span class="comment">// 设置单元格的背景颜色（单元格的样式会覆盖列或行的样式）   </span></span><br><span class="line">    columnHeadStyle.setFillForegroundColor(HSSFColor.WHITE.index);   </span><br><span class="line"></span><br><span class="line">    <span class="type">HSSFFont</span> <span class="variable">font</span> <span class="operator">=</span> workbook.createFont();   </span><br><span class="line">    font.setFontName(<span class="string">&quot;宋体&quot;</span>);   </span><br><span class="line">    font.setFontHeightInPoints((<span class="type">short</span>) <span class="number">10</span>);   </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 普通单元格样式   </span></span><br><span class="line">    <span class="type">HSSFCellStyle</span> <span class="variable">style</span> <span class="operator">=</span> workbook.createCellStyle();   </span><br><span class="line">    style.setFont(font);   </span><br><span class="line">    style.setAlignment(HSSFCellStyle.ALIGN_LEFT);<span class="comment">// 左右居中   </span></span><br><span class="line">    style.setVerticalAlignment(HSSFCellStyle.VERTICAL_TOP);<span class="comment">// 上下居中   </span></span><br><span class="line">    style.setWrapText(<span class="literal">true</span>);   </span><br><span class="line">    style.setLeftBorderColor(HSSFColor.BLACK.index);   </span><br><span class="line">    style.setBorderLeft((<span class="type">short</span>) <span class="number">1</span>);   </span><br><span class="line">    style.setRightBorderColor(HSSFColor.BLACK.index);   </span><br><span class="line">    style.setBorderRight((<span class="type">short</span>) <span class="number">1</span>);   </span><br><span class="line">    style.setBorderBottom(HSSFCellStyle.BORDER_THIN); <span class="comment">// 设置单元格的边框为粗体   </span></span><br><span class="line">    style.setBottomBorderColor(HSSFColor.BLACK.index); <span class="comment">// 设置单元格的边框颜色．   </span></span><br><span class="line">    style.setFillForegroundColor(HSSFColor.WHITE.index);<span class="comment">// 设置单元格的背景颜色．   </span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;   </span><br><span class="line">        <span class="comment">// 创建第一行   </span></span><br><span class="line">        <span class="type">HSSFRow</span> <span class="variable">row0</span> <span class="operator">=</span> sheet.createRow(<span class="number">0</span>);   </span><br><span class="line">        <span class="comment">// 设置行高   </span></span><br><span class="line">        row0.setHeight((<span class="type">short</span>) <span class="number">900</span>);   </span><br><span class="line">        <span class="comment">// 创建第一列   </span></span><br><span class="line">        <span class="type">HSSFCell</span> <span class="variable">cell0</span> <span class="operator">=</span> row0.createCell(<span class="number">0</span>);   </span><br><span class="line">        cell0.setCellValue(<span class="keyword">new</span> <span class="title class_">HSSFRichTextString</span>(<span class="string">&quot;会议表&quot;</span>));   </span><br><span class="line">        cell0.setCellStyle(headstyle);   </span><br><span class="line">        <span class="comment">/**  </span></span><br><span class="line"><span class="comment">       * 合并单元格  </span></span><br><span class="line"><span class="comment">       *    第一个参数：第一个单元格的行数（从0开始）  </span></span><br><span class="line"><span class="comment">       *    第二个参数：第二个单元格的行数（从0开始）  </span></span><br><span class="line"><span class="comment">       *    第三个参数：第一个单元格的列数（从0开始）  </span></span><br><span class="line"><span class="comment">       *    第四个参数：第二个单元格的列数（从0开始）  </span></span><br><span class="line"><span class="comment">       */</span>  </span><br><span class="line">        <span class="type">CellRangeAddress</span> <span class="variable">range</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CellRangeAddress</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">7</span>);   </span><br><span class="line">        sheet.addMergedRegion(range);   </span><br><span class="line">        <span class="comment">// 创建第二行   </span></span><br><span class="line">        <span class="type">HSSFRow</span> <span class="variable">row1</span> <span class="operator">=</span> sheet.createRow(<span class="number">1</span>);   </span><br><span class="line">        <span class="type">HSSFCell</span> <span class="variable">cell1</span> <span class="operator">=</span> row1.createCell(<span class="number">0</span>);   </span><br><span class="line">        cell1.setCellValue(<span class="keyword">new</span> <span class="title class_">HSSFRichTextString</span>(<span class="string">&quot;本次会议时间&quot;</span>));   </span><br><span class="line">        cell1.setCellStyle(centerstyle);   </span><br><span class="line">        <span class="comment">// 合并单元格   </span></span><br><span class="line">        range = <span class="keyword">new</span> <span class="title class_">CellRangeAddress</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">7</span>);   </span><br><span class="line">        sheet.addMergedRegion(range);   </span><br><span class="line">        <span class="comment">// 第三行   </span></span><br><span class="line">        <span class="type">HSSFRow</span> <span class="variable">row2</span> <span class="operator">=</span> sheet.createRow(<span class="number">3</span>);   </span><br><span class="line">        row2.setHeight((<span class="type">short</span>) <span class="number">750</span>);   </span><br><span class="line">        <span class="type">HSSFCell</span> <span class="variable">cell</span> <span class="operator">=</span> row2.createCell(<span class="number">0</span>);   </span><br><span class="line">        cell.setCellValue(<span class="keyword">new</span> <span class="title class_">HSSFRichTextString</span>(<span class="string">&quot;责任者&quot;</span>));   </span><br><span class="line">        cell.setCellStyle(columnHeadStyle);   </span><br><span class="line">        cell = row2.createCell(<span class="number">1</span>);   </span><br><span class="line">        cell.setCellValue(<span class="keyword">new</span> <span class="title class_">HSSFRichTextString</span>(<span class="string">&quot;成熟度排序&quot;</span>));   </span><br><span class="line">        cell.setCellStyle(columnHeadStyle);   </span><br><span class="line">        cell = row2.createCell(<span class="number">2</span>);   </span><br><span class="line">        cell.setCellValue(<span class="keyword">new</span> <span class="title class_">HSSFRichTextString</span>(<span class="string">&quot;事项&quot;</span>));   </span><br><span class="line">        cell.setCellStyle(columnHeadStyle);   </span><br><span class="line">        cell = row2.createCell(<span class="number">3</span>);   </span><br><span class="line">        cell.setCellValue(<span class="keyword">new</span> <span class="title class_">HSSFRichTextString</span>(<span class="string">&quot;前次会议要求/n/新项目的项目概要&quot;</span>));   </span><br><span class="line">        cell.setCellStyle(columnHeadStyle);   </span><br><span class="line">        cell = row2.createCell(<span class="number">4</span>);   </span><br><span class="line">        cell.setCellValue(<span class="keyword">new</span> <span class="title class_">HSSFRichTextString</span>(<span class="string">&quot;上周工作进展&quot;</span>));   </span><br><span class="line">        cell.setCellStyle(columnHeadStyle);   </span><br><span class="line">        cell = row2.createCell(<span class="number">5</span>);   </span><br><span class="line">        cell.setCellValue(<span class="keyword">new</span> <span class="title class_">HSSFRichTextString</span>(<span class="string">&quot;本周工作计划&quot;</span>));   </span><br><span class="line">        cell.setCellStyle(columnHeadStyle);   </span><br><span class="line">        cell = row2.createCell(<span class="number">6</span>);   </span><br><span class="line">        cell.setCellValue(<span class="keyword">new</span> <span class="title class_">HSSFRichTextString</span>(<span class="string">&quot;问题和建议&quot;</span>));   </span><br><span class="line">        cell.setCellStyle(columnHeadStyle);   </span><br><span class="line">        cell = row2.createCell(<span class="number">7</span>);   </span><br><span class="line">        cell.setCellValue(<span class="keyword">new</span> <span class="title class_">HSSFRichTextString</span>(<span class="string">&quot;备 注&quot;</span>));   </span><br><span class="line">        cell.setCellStyle(columnHeadStyle);   </span><br><span class="line">        <span class="comment">// 访问数据库，得到数据集   </span></span><br><span class="line">        List&lt;DeitelVO&gt; deitelVOList = getEntityManager().queryDeitelVOList();   </span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">4</span>;   </span><br><span class="line">        <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">4</span>;   </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; deitelVOList.size(); i++) &#123;   </span><br><span class="line">            <span class="type">DeitelVO</span> <span class="variable">vo</span> <span class="operator">=</span> deitelVOList.get(i);   </span><br><span class="line">            <span class="type">String</span> <span class="variable">dname</span> <span class="operator">=</span> vo.getDname();   </span><br><span class="line">            List&lt;Workinfo&gt; workList = vo.getWorkInfoList();   </span><br><span class="line">            <span class="type">HSSFRow</span> <span class="variable">row</span> <span class="operator">=</span> sheet.createRow(m);   </span><br><span class="line">            cell = row.createCell(<span class="number">0</span>);   </span><br><span class="line">            cell.setCellValue(<span class="keyword">new</span> <span class="title class_">HSSFRichTextString</span>(dname));   </span><br><span class="line">            cell.setCellStyle(centerstyle);   </span><br><span class="line">            <span class="comment">// 合并单元格   </span></span><br><span class="line">            range = <span class="keyword">new</span> <span class="title class_">CellRangeAddress</span>(m, m + workList.size() - <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);   </span><br><span class="line">            sheet.addMergedRegion(range);   </span><br><span class="line">            m = m + workList.size();   </span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; workList.size(); j++) &#123;   </span><br><span class="line">                <span class="type">Workinfo</span> <span class="variable">w</span> <span class="operator">=</span> workList.get(j);   </span><br><span class="line">                <span class="comment">// 遍历数据集创建Excel的行   </span></span><br><span class="line">                row = sheet.getRow(k + j);   </span><br><span class="line">                <span class="keyword">if</span> (<span class="literal">null</span> == row) &#123;   </span><br><span class="line">                    row = sheet.createRow(k + j);   </span><br><span class="line">                &#125;   </span><br><span class="line">                cell = row.createCell(<span class="number">1</span>);   </span><br><span class="line">                cell.setCellValue(w.getWnumber());   </span><br><span class="line">                cell.setCellStyle(centerstyle);   </span><br><span class="line">                cell = row.createCell(<span class="number">2</span>);   </span><br><span class="line">                cell.setCellValue(<span class="keyword">new</span> <span class="title class_">HSSFRichTextString</span>(w.getWitem()));   </span><br><span class="line">                cell.setCellStyle(style);   </span><br><span class="line">                cell = row.createCell(<span class="number">3</span>);   </span><br><span class="line">                cell.setCellValue(<span class="keyword">new</span> <span class="title class_">HSSFRichTextString</span>(w.getWmeting()));   </span><br><span class="line">                cell.setCellStyle(style);   </span><br><span class="line">                cell = row.createCell(<span class="number">4</span>);   </span><br><span class="line">                cell.setCellValue(<span class="keyword">new</span> <span class="title class_">HSSFRichTextString</span>(w.getWbweek()));   </span><br><span class="line">                cell.setCellStyle(style);   </span><br><span class="line">                cell = row.createCell(<span class="number">5</span>);   </span><br><span class="line">                cell.setCellValue(<span class="keyword">new</span> <span class="title class_">HSSFRichTextString</span>(w.getWtweek()));   </span><br><span class="line">                cell.setCellStyle(style);   </span><br><span class="line">                cell = row.createCell(<span class="number">6</span>);   </span><br><span class="line">                cell.setCellValue(<span class="keyword">new</span> <span class="title class_">HSSFRichTextString</span>(w.getWproblem()));   </span><br><span class="line">                cell.setCellStyle(style);   </span><br><span class="line">                cell = row.createCell(<span class="number">7</span>);   </span><br><span class="line">                cell.setCellValue(<span class="keyword">new</span> <span class="title class_">HSSFRichTextString</span>(w.getWremark()));   </span><br><span class="line">                cell.setCellStyle(style);   </span><br><span class="line">            &#125;   </span><br><span class="line">            k = k + workList.size();   </span><br><span class="line">        &#125;   </span><br><span class="line">        <span class="comment">// 列尾   </span></span><br><span class="line">        <span class="type">int</span> <span class="variable">footRownumber</span> <span class="operator">=</span> sheet.getLastRowNum();   </span><br><span class="line">        <span class="type">HSSFRow</span> <span class="variable">footRow</span> <span class="operator">=</span> sheet.createRow(footRownumber + <span class="number">1</span>);   </span><br><span class="line">        <span class="type">HSSFCell</span> <span class="variable">footRowcell</span> <span class="operator">=</span> footRow.createCell(<span class="number">0</span>);   </span><br><span class="line">        footRowcell.setCellValue(<span class="keyword">new</span> <span class="title class_">HSSFRichTextString</span>(<span class="string">&quot;                    审  定：XXX      审  核：XXX     汇  总：XX&quot;</span>));   </span><br><span class="line">        footRowcell.setCellStyle(centerstyle);   </span><br><span class="line">        range = <span class="keyword">new</span> <span class="title class_">CellRangeAddress</span>(footRownumber + <span class="number">1</span>, footRownumber + <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>);   </span><br><span class="line">        sheet.addMergedRegion(range);   </span><br><span class="line"></span><br><span class="line">        <span class="type">HttpServletResponse</span> <span class="variable">response</span> <span class="operator">=</span> getResponse();   </span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> getRequest();   </span><br><span class="line">        <span class="type">String</span> <span class="variable">filename</span> <span class="operator">=</span> <span class="string">&quot;未命名.xls&quot;</span>;<span class="comment">//设置下载时客户端Excel的名称   </span></span><br><span class="line">        filename = Util.encodeFilename(filename, request);   </span><br><span class="line">        response.setContentType(<span class="string">&quot;application/vnd.ms-excel&quot;</span>);   </span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + filename);   </span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">ouputStream</span> <span class="operator">=</span> response.getOutputStream();   </span><br><span class="line">        workbook.write(ouputStream);   </span><br><span class="line">        ouputStream.flush();   </span><br><span class="line">        ouputStream.close();   </span><br><span class="line"></span><br><span class="line"><span class="comment">//        File f = new File(path);</span></span><br><span class="line"><span class="comment">//        // 不存在则创建它</span></span><br><span class="line"><span class="comment">//        if (!f.exists())</span></span><br><span class="line"><span class="comment">//            f.mkdirs();</span></span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;   </span><br><span class="line">        e.printStackTrace();   </span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>]]></content>
      <categories>
        <category>Expertise</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL</title>
    <url>/MySQL/</url>
    <content><![CDATA[<p>MySQL相关问题</p>
<span id="more"></span>

<h2 id="2022-07-09"><a href="#2022-07-09" class="headerlink" title="2022.07~09"></a>2022.07~09</h2><h3 id="批量插入"><a href="#批量插入" class="headerlink" title="批量插入"></a>批量插入</h3><p>批量插入verificationCode，需要使用certificateUserId来拼接verificationCode</p>
<ul>
<li><p><code>CONCAT()</code>函数：用于将两个或多个字符串拼接成一个字符串并返回</p>
<p>语法：<code>CONCAT(str1, str2, ...)</code> 至少需要一个参数，如果任何参数为NULL，则该函数返回NULL值。</p>
</li>
<li><p><code>CAST()</code>函数：用来转换类型</p>
<p>语法：<code>CAST(字段名 as 转换的类型)</code>||<code>CAST (expression AS data_type)</code></p>
<p>expression：任何有效的SQL Server表达式。<br>AS：用于分隔两个参数，在AS之前的是要处理的数据，在AS之后是要转换的数据类型。<br>data_type：目标系统所提供的数据类型，包括bigint和sql_variant，不能使用用户定义的数据类型。</p>
<p>转换的类型：</p>
<ul>
<li>二进制，同带binary前缀的效果 : BINARY    </li>
<li>字符型，可带参数 : CHAR()     </li>
<li>日期 : DATE     </li>
<li>时间: TIME     </li>
<li>日期时间型 : DATETIME     </li>
<li>浮点数 : DECIMAL      </li>
<li>整数 : SIGNED     </li>
<li>无符号整数 : UNSIGNED</li>
</ul>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> eb_certificate_user</span><br><span class="line"><span class="keyword">SET</span> verification_code <span class="operator">=</span> CONCAT(</span><br><span class="line">    <span class="built_in">cast</span>(certificate_user_id <span class="keyword">as</span> <span class="type">char</span>),</span><br><span class="line">    <span class="built_in">cast</span>(<span class="built_in">FLOOR</span>(RAND()<span class="operator">*</span><span class="number">500000</span> <span class="operator">+</span> <span class="number">500000</span>) <span class="keyword">as</span> <span class="type">char</span>) </span><br><span class="line">)</span><br><span class="line"><span class="keyword">where</span> verification_code <span class="keyword">is</span> <span class="keyword">null</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> CONCAT(</span><br><span class="line">    <span class="built_in">cast</span>(certificate_user_id <span class="keyword">as</span> <span class="type">char</span>),</span><br><span class="line">    <span class="built_in">cast</span>(<span class="built_in">FLOOR</span>(RAND()<span class="operator">*</span><span class="number">500000</span> <span class="operator">+</span> <span class="number">500000</span>) <span class="keyword">as</span> <span class="type">char</span>) </span><br><span class="line">)</span><br><span class="line"><span class="keyword">from</span> eb_certificate_user</span><br><span class="line"><span class="keyword">where</span> verification_code <span class="keyword">is</span> <span class="keyword">NULL</span></span><br></pre></td></tr></table></figure>



<h3 id="多规格商品的数据库设计"><a href="#多规格商品的数据库设计" class="headerlink" title="多规格商品的数据库设计"></a>多规格商品的数据库设计</h3><p>项目需要做一个虚拟产品的数据库设计，涉及到多个规格</p>
<p>比如：演出门票</p>
<p><img src="/MySQL/image-20220804104928275.png" alt="image-20220804104928275"></p>
<p>涉及：时间、场次、数量</p>
<div><div class="fold_hider"><div class="close hider_title">查了几种方法：</div></div><div class="fold">
<ol>
<li>用大宽表，每当商品有新的属性就新增一个nullable字段。这样不同类型的记录，代码需要自己记得取哪些列。好处是编码简单；坏处是，每次都要加列，做DDL很烦，如果是生产库，运维上会很郁闷，而且直接看表，不太容易分清楚哪个列是给哪个类型的记录预备的，必须另外单独记录文档。</li>
<li>表上增加一个json列（比如叫properties）每个类型数据特有的属性都塞这个json列里。在不直接支持json的db上，只能用varchar，然后业务代码自己解析这个json。如果在支持json的db上（比如mysql &gt; 5.7.10)，就稍微方便点，可以用json_extract之类的函数。此外一些ORM工具对json支持的不是很好，于是这个json到了object里就是string，需要额外处理。提一句mybatis通过挂一个type handler可以解决，还算容易。此方法的缺点是开发人员要管住json的schema，自己确保数据的合法性。</li>
<li>将共性的字段放在一个主表里（比如product），此外给每种类型建立一个子表(xxx_product_part)维护特有的字段。这样结构比较清晰，但是每次查询需要引入join。每次增加一种新的类型的时候也要增加对应的新表。</li>
<li>用主表 + 属性表。属性表就是一个大的kv（pid, key, value)。但问题是value的类型会很麻烦，毕竟可能需要字符串，整数，decimal，日期，时刻，enum等不同的类型。所以要不就是服务得自己搞这个解析转换工作，这时表就得定义为(pid, key, value_type, value_data)；要不就是挨个类型定义一列，上层自己取(pid, key, value_int, value_varchar, value_decimal, …)</li>
<li>每种产品直接建立新表（xxx_product, yyy_product, …) 但这么干基本上就是在埋坑, 没人会这么干吧。</li>
</ol>
<p>如果经常增加产品的类型，可能方法2或者4会比较适合，避免每次都创建新列&#x2F;新表。并且会比较灵活（但管不好就会乱套）。</p>
<p>如果产品类型增加的不是很频繁，方法1或者3会比较适合。</p>

</div></div>



<h4 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h4><ol>
<li><p><strong>【SPU】</strong> &#x3D; Standard Product Unit （标准产品单位）</p>
<p>SPU是商品信息聚合的最小单位，是一组可复用、易检索的标准化信息的集合，该集合描述了一个产品的特性。通俗点讲，属性值、特性相同的商品就可以称为一个SPU。</p>
</li>
<li><p><strong>【SKU】</strong> &#x3D; Stock Keeping Unit （库存量单位）</p>
<p>SKU即库存进出计量的单位， 可以是以件、盒、托盘等为单位。</p>
<p>SKU是物理上不可分割的最小存货单元。在使用时要根据不同业态，不同管理模式来处理。</p>
</li>
</ol>
<p>回到演出门票商品：</p>
<ul>
<li><p>SPU：《恋爱的犀牛》演出门票</p>
</li>
<li><p>SKU[1]：268元一张的8月4号 20:00 - 21:30 的《恋爱的犀牛》演出门票</p>
<p>SKU[2]：520元两张的8.4 20:00 - 21:30 的《恋爱的犀牛》演出门票（注意此时两张票为一个sku，所以规格中包含<code>购买票数量</code>）</p>
</li>
</ul>
<h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><p>以该门票为例：</p>
<ol>
<li><p><code>eb_product</code> 表<code>（SPU表）</code>，只记录SPU信息，不涉及任何具体规格配置</p>
<table>
<thead>
<tr>
<th>Product_id（商品id）</th>
<th>Product_name（商品名称）</th>
<th>shop_id（商家id）</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>《恋爱的犀牛》演出门票</td>
<td>1</td>
</tr>
</tbody></table>
</li>
<li><p><code>product_sku</code> 表<code>（SKU表）</code>，里面具体到该商品的所有配置的具体ID，但不包括配置信息</p>
<table>
<thead>
<tr>
<th>sku_id</th>
<th>sku_name（sku_名称）</th>
<th>product_id（FK）</th>
<th>stock</th>
<th>sales</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>注意：</p>
<blockquote>
<p>SPU表和SKU表并不直接关联，还需要通过另外三张张表来关键，即通过间接的关系来进行关联，为了便于理解，暂定为规格表，和规格选项表, SKU规格信息表</p>
</blockquote>
</li>
<li><p><code>product_specification </code>表<code>（SPU规格表）</code>，设置一个外键为SPU的主键，可以通过SPU主键查询到SPU规格有哪些。</p>
<p>比如：演出门票的规格：日期，场次，购买票数量</p>
<table>
<thead>
<tr>
<th>spec_id（规格id）</th>
<th>product_id（FK）</th>
<th>spec_name（规格名称）</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>1</td>
<td>日期</td>
</tr>
<tr>
<td>2</td>
<td>1</td>
<td>场次</td>
</tr>
<tr>
<td>3</td>
<td>1</td>
<td>购买票数量</td>
</tr>
</tbody></table>
</li>
<li><p><code>product_spec_option</code> 表 （规格选项表），将该选项表关联到SPU规格表，就能获取到SPU的规格和具体的选项。</p>
<p>比如：日期有8.4、8.5、8.6；场次有上午场和下午场；购买票数有1、2</p>
<table>
<thead>
<tr>
<th>option_id（选项id）</th>
<th>spec_id（FK）</th>
<th>value（选项值）</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>1</td>
<td>2022&#x2F;08&#x2F;04</td>
</tr>
<tr>
<td>2</td>
<td>1</td>
<td>2022&#x2F;08&#x2F;05</td>
</tr>
<tr>
<td>3</td>
<td>2</td>
<td>20:00~21:30</td>
</tr>
<tr>
<td>4</td>
<td>2</td>
<td>15:30~17:00</td>
</tr>
<tr>
<td>5</td>
<td>3</td>
<td>1</td>
</tr>
<tr>
<td>6</td>
<td>3</td>
<td>2</td>
</tr>
</tbody></table>
</li>
<li><p><code>sku_specification</code> 表（SKU规格信息）把SKU关联到规格选项表就能把SKU和SPU联系起来了</p>
</li>
</ol>
<p><img src="/MySQL/image-20220804105804058.png" alt="image-20220804105804058"></p>
<p>虽然SPU和SKU有一对多的关系，但是不能直接从SPU的具体配置找到对应的SKU商品</p>
<p>所以流程为：</p>
<p><font color="red">SPU —&gt; 找到SPU相应的商品规格 —&gt; 获取到具体规格具体选项 —&gt; 确定到唯一对应的SKU </font></p>
<h3 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h3><h4 id="CROSS-JOIN"><a href="#CROSS-JOIN" class="headerlink" title="CROSS JOIN"></a>CROSS JOIN</h4><p>交叉连接。没有任何限制条件，结果为笛卡尔积。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table1 <span class="keyword">CROSS</span> <span class="keyword">JOIN</span> table2</span><br><span class="line"></span><br><span class="line"><span class="keyword">equals</span>:</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table1, table2</span><br></pre></td></tr></table></figure>

<p>产生的结果集为两个表各自个数的乘积</p>
<h4 id="INNER-JOIN"><a href="#INNER-JOIN" class="headerlink" title="INNER JOIN"></a>INNER JOIN</h4><h3 id="去重-amp-记录总数"><a href="#去重-amp-记录总数" class="headerlink" title="去重 &amp; 记录总数"></a>去重 &amp; 记录总数</h3><ol>
<li><p>使用<code>distinct</code>去重：适合查询整张表的总数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 统计领取过优惠券的用户总数</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(user_id) <span class="keyword">as</span> total <span class="keyword">from</span> certificateUser</span><br><span class="line"></span><br><span class="line"># 每个用户领取过不止一张优惠券</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span> user_id) <span class="keyword">as</span> total <span class="keyword">from</span> certificateUser</span><br></pre></td></tr></table></figure>


</li>
<li><p><code>group by</code> 分组去重：适合根据条件分组后查询每组的总数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 查询每种券有多少人领取</span><br><span class="line"><span class="keyword">select</span> certificate_name, <span class="built_in">count</span>(<span class="keyword">distinct</span> user_id) </span><br><span class="line"><span class="keyword">from</span> eb_certificate_user</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> certificate_id</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><ol>
<li><p><code>You can’t specify target table for update in FROM clause</code></p>
<p>【原因】：不能先select出同一表中的某些值，再update这个表(在同一语句中)。即不能依据某字段值做判断再来更新某字段值</p>
<p>【解决】：将select出的结果再通过中间表select一遍</p>
<p>eg：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 修改 userinfo 表里 age<span class="operator">=</span><span class="number">23</span> 的用户年龄为<span class="number">18</span></span><br><span class="line"></span><br><span class="line"># 错误</span><br><span class="line"><span class="keyword">update</span> userinfo</span><br><span class="line"><span class="keyword">set</span> age<span class="operator">=</span><span class="number">18</span></span><br><span class="line"><span class="keyword">where</span> user_id <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> user_id</span><br><span class="line">	<span class="keyword">from</span> userinfo</span><br><span class="line">	<span class="keyword">where</span> age<span class="operator">=</span><span class="number">23</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"># 正确</span><br><span class="line"><span class="keyword">UPDATE</span> app01_userinfo</span><br><span class="line"><span class="keyword">set</span> age<span class="operator">=</span><span class="number">18</span></span><br><span class="line"><span class="keyword">where</span> id <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> A.id <span class="keyword">FROM</span>(</span><br><span class="line">		<span class="keyword">select</span> A.id</span><br><span class="line">		<span class="keyword">from</span> app01_userinfo A</span><br><span class="line">		<span class="keyword">where</span> A.age<span class="operator">=</span><span class="number">23</span>) <span class="keyword">AS</span> A</span><br><span class="line">)</span><br></pre></td></tr></table></figure>


</li>
<li><p><code>Every derived table must have its own alias</code></p>
<p>【原因】：在做<strong>多表查询</strong>，或者查询的时候<strong>产生新的表</strong>的时候会出现这个错误：Every derived table must have its own alias（<strong>每一个派生出来的表都必须有一个自己的别名</strong>）</p>
<p>【解决】：<strong>给派生表加上别名即可</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 错误</span><br><span class="line"><span class="keyword">UPDATE</span> app01_userinfo</span><br><span class="line"><span class="keyword">set</span> age<span class="operator">=</span><span class="number">18</span></span><br><span class="line"><span class="keyword">where</span> id <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> A.id <span class="keyword">FROM</span>(</span><br><span class="line">		<span class="keyword">select</span> A.id</span><br><span class="line">		<span class="keyword">from</span> app01_userinfo A</span><br><span class="line">		<span class="keyword">where</span> A.age<span class="operator">=</span><span class="number">23</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"># 正确</span><br><span class="line"><span class="keyword">UPDATE</span> app01_userinfo</span><br><span class="line"><span class="keyword">set</span> age<span class="operator">=</span><span class="number">18</span></span><br><span class="line"><span class="keyword">where</span> id <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> A.id <span class="keyword">FROM</span>(</span><br><span class="line">		<span class="keyword">select</span> A.id</span><br><span class="line">		<span class="keyword">from</span> app01_userinfo A</span><br><span class="line">		<span class="keyword">where</span> A.age<span class="operator">=</span><span class="number">23</span>) <span class="keyword">AS</span> A</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Expertise</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>NewEnglish</title>
    <url>/NewEnglish/</url>
    <content><![CDATA[<p>新英文杂志</p>
<p>每周读几篇感兴趣的</p>
<h1 id="Week33"><a href="#Week33" class="headerlink" title="Week33"></a>Week33</h1>

	<div class="row">
    <embed src="https://mesmalheurs.github.io/NewEnglish/Week33_20220813PDF.pdf" width="100%" height="550" type="application/pdf">
	</div>




<span id="more"></span>

<div><div class="fold_hider"><div class="close hider_title">Masturbation</div></div><div class="fold">
<h2 id="Masturbation"><a href="#Masturbation" class="headerlink" title="Masturbation"></a>Masturbation</h2><h3 id="MindMap-Masturbation"><a href="#MindMap-Masturbation" class="headerlink" title="MindMap - Masturbation"></a>MindMap - Masturbation</h3><div class="markmap-container" style="height:300px">
  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;Masturbation&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;Para.1~3 性高潮能提高多巴胺和催产素的水平，使人感到快乐&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;Para.4~6 性高潮有助于提高机体免疫力&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;Para.7~10 自慰可以减轻和预防疼痛&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;Para.11~12 自慰可以提高免疫系统的功能&quot;}]}"></svg>
</div>


<h3 id="Phrase-amp-Practice-Masturbation"><a href="#Phrase-amp-Practice-Masturbation" class="headerlink" title="Phrase &amp; Practice - Masturbation"></a>Phrase &amp; Practice - Masturbation</h3><p><code>at full capacity </code>：表示开足马力；满负荷；全力</p>
<p>类似表达：</p>
<ul>
<li><code>all out</code>：using or involving every possible effort and done in a very determined way 全力以赴，竭尽全力</li>
<li><code>full steam ahead</code>：with as much energy as possible 全力</li>
</ul>
<ol>
<li><p>面包厂正在满负荷进行生产。</p>
<p>Bread factory is at full capacity in producing.</p>
<p>改：<font color="red">Bread factories are working at full capacity.</font></p>
</li>
<li><p>这对夫妇全力以赴为他们的客人准备一场盛大的宴会。</p>
<p>The couple are at full capacity in preparing a grandbanquet for their guests.</p>
<p>改：<font color="red">The couple went all out to prepare a spectacular feast for their guests.</font></p>
</li>
</ol>

</div></div>



<div><div class="fold_hider"><div class="close hider_title">Trophies</div></div><div class="fold">
<h2 id="Trophies"><a href="#Trophies" class="headerlink" title="Trophies"></a>Trophies</h2><h3 id="MindMap-Trophies"><a href="#MindMap-Trophies" class="headerlink" title="MindMap - Trophies"></a>MindMap - Trophies</h3><div class="markmap-container" style="height:300px">
  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;Trophies&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;Para.1 引出话题：许多比赛都设有安慰奖，对孩子自尊心有利有弊&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;Para.2 参与奖存在已久，但最近收到抨击，被认为对孩子的成长不利&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;Para.3 帕戈内认为参与奖可以肯定失败者的能力以及加强参与者的体育精神&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;Para.4 增加孩子自信的真正方式在于与他们交流&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;Para.5 这个系统创造了一个由表面好处和赞赏所驱动的反馈循环&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;Para.6 正强化对儿童和成人都有利&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;Para.7 参与奖应该和沟通对话结合起来&quot;}]}"></svg>
</div>


<h3 id="Phrase-amp-Practice-Trophies"><a href="#Phrase-amp-Practice-Trophies" class="headerlink" title="Phrase &amp; Practice - Trophies"></a>Phrase &amp; Practice - Trophies</h3><p><code>crucial</code>：somthing that is crucial is extremely important, because everything else depends on it. 至关重要的，关键性的</p>
<p>类似表达：</p>
<ul>
<li><p><code>vital</code>：extremely important and necessary for something to succeed or exist</p>
</li>
<li><p><code>critical</code>：somthing that is critical is very important because what happens in the future depends on it. </p>
<ul>
<li>常用搭配：<code>be critical to</code>、<code>be of critical importance</code></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eg: 这些谈判对和平进程的前景至关重要</span><br><span class="line">	These talks are critical to the future of the peace process.</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>pivotal</code>：of great importance because other things depend on it.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eg: 在过渡时期发挥关键性作用</span><br><span class="line">	play a pivotal role in the transitional process. </span><br></pre></td></tr></table></figure>
</li>
<li><p><code>paramount</code>：more important than anything else</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eg: 最重要的是孩子的权益</span><br><span class="line">	the interests of the child are of paramount importance.</span><br></pre></td></tr></table></figure></li>
</ul>
<ol>
<li><p>保护热带雨林至关重要。</p>
<p>Protecting rainforest is of paramount importance.</p>
</li>
<li><p>外贸对经济而言非常重要。</p>
<p>Foreign trade is critical to the economy.</p>
</li>
</ol>

</div></div>

<hr>

<h1 id="Week32"><a href="#Week32" class="headerlink" title="Week32"></a>Week32</h1>

	<div class="row">
    <embed src="https://mesmalheurs.github.io/NewEnglish/Week32_20220806PDF.pdf" width="100%" height="550" type="application/pdf">
	</div>




<div><div class="fold_hider"><div class="close hider_title">DoingNothing</div></div><div class="fold">
<h2 id="DoingNothing"><a href="#DoingNothing" class="headerlink" title="DoingNothing"></a>DoingNothing</h2><h3 id="MindMap-DoingNothing"><a href="#MindMap-DoingNothing" class="headerlink" title="MindMap - DoingNothing"></a>MindMap - DoingNothing</h3><div class="markmap-container" style="height:300px">
  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;DoingNothing&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;Para.1~3 引入话题&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;Para.1 某CEO突然辞职&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;Para.2 闲下来很难&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;Para.3 需要学会闲下来&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;Para.4~5 深入讨论&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;Para.4 哲学家们认为闲暇很重要&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;Para.5 经济学家认为奋斗是为了享受&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;Para.6~9 分析原因&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;Para.6 疫情使得闲暇时间更难获得&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;Para.7 我们习惯把时间货币化&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;Para.8 努力工作的良知和停止工作的内疚&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;Para.9 闲暇使人无聊&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;Para.10 总结：放空激发创造力，让我们更加快乐&quot;}]}"></svg>
</div>


<h3 id="Phrase-amp-Practice-DoingNothing"><a href="#Phrase-amp-Practice-DoingNothing" class="headerlink" title="Phrase &amp; Practice - DoingNothing"></a>Phrase &amp; Practice - DoingNothing</h3><p><code>catch sb&#39;s attention</code>：表示引起某人注意；惹人注目</p>
<p>类似表达：</p>
<ul>
<li><code>arrest sb&#39;s attention</code>：to make sb notice sth and pay attention to it 吸引注意</li>
<li><code>intrigue sb</code>：to make sb very interested and want to know more about sth 激起…的兴趣</li>
<li><code>fascinate sb</code>：to attract or interest sb very much 深深吸引</li>
</ul>
<ol>
<li><p>从安妮座位旁走过时，他设法吸引她的注意。</p>
<p>He managed to catch Annie’s eye when walking along her.</p>
<p>改：<font color="red">He tried to catch Annie’s eye as he walked by her seat.</font></p>
<ul>
<li><code>walk along</code>：沿着、散步</li>
<li><code>walk by</code>：在…旁走过</li>
</ul>
</li>
<li><p>在当代社会，环保总是能够引起我们的关注。</p>
<p>In modern society, environmental protection always catch our eye.</p>
<p>改：<font color="red">The environmental preservation never fails to fascinate us in modern society.</font></p>
</li>
</ol>

</div></div>



<div><div class="fold_hider"><div class="close hider_title">HousingCrisis</div></div><div class="fold">
<h2 id="Housing-Crisis"><a href="#Housing-Crisis" class="headerlink" title="Housing Crisis"></a>Housing Crisis</h2><h3 id="MinMap-Housing-Crisis"><a href="#MinMap-Housing-Crisis" class="headerlink" title="MinMap - Housing Crisis"></a>MinMap - Housing Crisis</h3><div class="markmap-container" style="height:300px">
  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;HousingCrisis&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;Para.1~2 前言：小说《骆驼祥子》的梗概与主旨&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;Para.1 《骆驼祥子》概述&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;Para.2 《骆驼祥子》主旨&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;Para.3~6 中心：当代骆驼祥子——房屋业主&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;Para.3 《骆驼祥子》在中国重新上演，点出当代骆驼祥子——购房者&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;Para.4~6 买到烂尾楼的购房者的愤怒与冤屈&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;Para.5 购房者拒绝付贷款，并宣称他们虽正遭受祥子的遭遇，但已不再是软弱的祥子&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;Para.6 一对购房夫妻的购房经历&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;Para.7 总结：当代“骆驼祥子”的悲剧&quot;}]}"></svg>
</div>


<h3 id="Phrase-amp-Practice-Housing-Crisis"><a href="#Phrase-amp-Practice-Housing-Crisis" class="headerlink" title="Phrase &amp; Practice - Housing Crisis"></a>Phrase &amp; Practice - Housing Crisis</h3><p><code>toil</code>：to work very hard for a long period of time 长时间地苦干，辛苦劳作</p>
<p><code>toil (away) at sth</code>：苦干某事</p>
<p>类似表达：</p>
<ul>
<li><p><code>labour over sth</code>：to work hard</p>
</li>
<li><p><code>sweat over sth</code>：to work hard at sth</p>
</li>
<li><p><code>slave away at sth</code>：to work very hard with little time to rest</p>
</li>
</ul>
<ol>
<li><p>在阴暗潮湿地工厂里苦作的人们精疲力竭了，无法享受家庭生活。（潮湿的：dank）</p>
<p><del>Workers who toiled away at factories dark and dank are</del> <font color="red">People who toiled in dim, dank factories were</font>  too exhausted to enjoy <font color="red">their</font> family life.</p>
</li>
<li><p>他为这些计划苦干了六个月。</p>
<p>He <del>toiled away at these plans</del> <font color="red">had sweated over the plans</font> for six months.</p>
</li>
</ol>

</div></div>



<div><div class="fold_hider"><div class="close hider_title">Evolution</div></div><div class="fold">
<h2 id="Evolution"><a href="#Evolution" class="headerlink" title="Evolution"></a>Evolution</h2><h3 id="MindMap-Evolution"><a href="#MindMap-Evolution" class="headerlink" title="MindMap - Evolution"></a>MindMap - Evolution</h3><div class="markmap-container" style="height:300px">
  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;Evolution&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;before&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;Para.1 古熊猫可能是最后一个生活在欧洲的熊猫物种&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;Para.2~3 牙齿化石的发现&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;Para.4 古熊猫与现在的大熊猫体型相似或略小&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;Para.5 现在的大熊猫更可能是古熊猫的同类而非后代&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;Para.6 古熊猫虽是素食动物，但可能不以竹子为食&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;Para.7 与其他物种的竞争导致了大熊猫的植食性分化&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;Para.8 熊猫的进化&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;after&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;Para.1~2 引入：近日古生物学家新发现一种古熊猫物种&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;Para.3~6 古熊猫物种介绍：此类古熊猫在环境的作用下形成了不同于现代熊猫的素食结构&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;Para.8 结尾：古熊猫灭绝的潜在原因&quot;}]}]}"></svg>
</div>


<h3 id="Phrase-amp-Practice-Evolution"><a href="#Phrase-amp-Practice-Evolution" class="headerlink" title="Phrase &amp; Practice - Evolution"></a>Phrase &amp; Practice - Evolution</h3><p><code>propell (sb) to (sth)</code>：move someone into a new situation or make them do something 使处于…的境况；驱使，迫使</p>
<p>类似表达：</p>
<ul>
<li><code>impel</code>：The lack of democracy and equality impelled the oppressed to fight for independence. 没有民主和平等的境况促使受压迫者为独立而战。</li>
<li><code>drive</code>：Phil, driven by jealousy, started spying on his wife. 菲尔在嫉妒心驱使下开始暗中监视他的妻子。</li>
</ul>
<ol>
<li><p>公司的董事们被迫采取行动。</p>
<p>Managers in the company were impelled to take actions.</p>
<p>改：<font color="red">Company directors were propelled to action.</font></p>
</li>
<li><p>未知的事情能激发我们做更多的事</p>
<p><del>Things</del> <font color="red"> What is out there that is </font> unkown can drive <font color="red">&#x2F; propel </font> us to do more <del>things</del>.</p>
</li>
</ol>

</div></div>



<div><div class="fold_hider"><div class="close hider_title">AmbientStress</div></div><div class="fold">
<h2 id="Ambient-Stress"><a href="#Ambient-Stress" class="headerlink" title="Ambient Stress"></a>Ambient Stress</h2><h3 id="MindMap-Ambient-Stress"><a href="#MindMap-Ambient-Stress" class="headerlink" title="MindMap - Ambient Stress"></a>MindMap - Ambient Stress</h3><div class="markmap-container" style="height:300px">
  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;AmbientStress&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;Para.1~4 新冠肺炎疫情带来心理创伤&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;Para.1 疫情以来，四成美国人出现了焦虑或抑郁&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;Para.2 疫情给人们的生活带来了巨大不便，社交活动减少&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;Para.3 即使生活恢复正常，人们的心理健康仍存在问题&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;Para.4 原因可能是“环境压力”&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;Para. 5~8 坎贝尔研究环境压力源&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;Para.5 1983年坎贝尔团队研究了环境压力的特点&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;Para.6 尽管生活秩序恢复，人们精神仍旧在遭受不良影响&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;Para.7 慢性压力也会对人们的身体健康带来影响&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[16,17]},&quot;v&quot;:&quot;Para.8 应对压力能力是关键&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[18,19]},&quot;v&quot;:&quot;Para. 9~12 如何应对环境压力&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[20,21]},&quot;v&quot;:&quot;Para.9 当压力成为日常就很容易被忽略&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[21,22]},&quot;v&quot;:&quot;Para.10 制定可持续的应对策略很重要&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[22,23]},&quot;v&quot;:&quot;Para.11 给大脑新的刺激有利于应对压力&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[23,24]},&quot;v&quot;:&quot;Para.12 最简单的方法是注意到压力的存在，才能进行管理&quot;}]}]}"></svg>
</div>


<h3 id="Phrase-amp-Practice-Ambient-Stress"><a href="#Phrase-amp-Practice-Ambient-Stress" class="headerlink" title="Phrase &amp; Practice - Ambient Stress"></a>Phrase &amp; Practice - Ambient Stress</h3><p><code>support</code>：to give or be ready to give help to sb if they need it 帮助，援助</p>
<p>类似表达：</p>
<ul>
<li><code>bolster up</code>：to provide something with physical support or reinforcement</li>
<li><code>aid</code>：to help sb&#x2F;sth to do sth, especially by making it easier</li>
<li><code>assist</code>：to help sb to do sth</li>
</ul>
<ol>
<li><p>政府每年提供25亿英镑支援志愿部门的活动。</p>
<p>Government provides 25 billion pounds to support activities of volunteer department every year.</p>
<p>改：<font color="red">The government gives ￡2,500 million a year to support the activities of the voluntary sector.</font></p>
</li>
<li><p>我喜欢去拜访她并给她安慰和支持。</p>
<p>I like to visit her <del>and</del> to <del>give her embrace and support</del> <font color="red"> comfort and support her</font>.</p>
</li>
</ol>

</div></div>





<hr>

<h1 id="Week31"><a href="#Week31" class="headerlink" title="Week31"></a>Week31</h1>

	<div class="row">
    <embed src="https://mesmalheurs.github.io/NewEnglish/Week31_20220730PDF.pdf" width="100%" height="550" type="application/pdf">
	</div>






<div><div class="fold_hider"><div class="close hider_title">WhyFacebook</div></div><div class="fold">
<h2 id="Why-Facebook"><a href="#Why-Facebook" class="headerlink" title="Why Facebook"></a>Why Facebook</h2><h3 id="MindMap-WhyFacebook"><a href="#MindMap-WhyFacebook" class="headerlink" title="MindMap - WhyFacebook"></a>MindMap - WhyFacebook</h3><div class="markmap-container" style="height:300px">
  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;WhyFacebook&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;Para.1 由扎克伯格的脸书发文引入，指出脸书正对自身进行改革&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;Para.2-3 直接点名Meta公司的抄袭行径，指出TikTok对于其的影响&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;Para.4-6 指出脸书正在做出的改变将对整个行业系统带来的影响&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;Para.7-8 以名人为例表明用户对于脸书TikTok的不满，对比扎克伯格与用户的态度&quot;}]}"></svg>
</div>


<h3 id="Phrase-amp-Practice-WhyFacebook"><a href="#Phrase-amp-Practice-WhyFacebook" class="headerlink" title="Phrase &amp; Practice- WhyFacebook"></a>Phrase &amp; Practice- WhyFacebook</h3><p><code>be appealing to</code>：be attractive or interesting 有吸引力的；有趣的，对…有吸引力的</p>
<p>类似表达：</p>
<ul>
<li><code>attractive</code>：having qualities that make you want to accept something or be involved in it.</li>
<li><code>absorbing</code>：enjoyable and interesting, and keep your attention for a long time.</li>
<li><code>alluring</code>：someone or something that is alluring is very attractive.</li>
</ul>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3><ol>
<li><p>它创造了一种吸引游客的氛围。</p>
<p>It has created an atmosphere to attractive visitors.</p>
<p>改：<font color="red">It creates an atmosphere which visitors find so appealing.</font></p>
</li>
<li><p>《两姊妹》是一本引人入胜的读物。</p>
<p>Two sisters is an alluring book.</p>
<p>改：<font color="red">“Two Sisters” is an absorbing read.</font></p>
</li>
</ol>

</div></div>



<div><div class="fold_hider"><div class="close hider_title">ForCrisis</div></div><div class="fold">
<h2 id="For-Crisis"><a href="#For-Crisis" class="headerlink" title="For Crisis"></a>For Crisis</h2><h3 id="MindMap-ForCrisis"><a href="#MindMap-ForCrisis" class="headerlink" title="MindMap - ForCrisis"></a>MindMap - ForCrisis</h3><div class="markmap-container" style="height:300px">
  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;ForCrisis&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;before&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;Pre - 引出话题：非武装紧急援助机制将在美国上线，但缺乏资金支持&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;Para1~4 - 心理热线的好处：号码易记、将会和911以及现有的全国自杀预防热线连通，可以更好地帮助解决人们的心理问题&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;Para 5 - 联邦政府拨款虽足以让系统启动但不能维持3年&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;Para 6 - 投资988法案将会是明智之举&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;Para 7 - 法案名称来源&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;Para 8 - 约有25%的警察犯罪都是在处理一些非典型的、涉及精神问题的案件时发生的&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;Para 9 - 988将代替传统的自杀干预热线，建立一种应急系统。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;Para 10 - 洛杉矶已有自杀救助服务&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;Para 11 - 988法案将成为911之后最重大和积极的法案&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;after&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;【导入】Para 1~4：介绍988热线运行机制&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;【分析】Para 5~6：指出该项目在各州运行所需的资金问题仍待解决&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;【分析】Para 7~9：追溯迈尔斯·霍尔事件，论证988热线的必要性&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[16,17]},&quot;v&quot;:&quot;【结尾】Para10~11：介绍洛杉矶县在推广988热线方面取得的进展&quot;}]}]}"></svg>
</div>


<h3 id="Phrase-amp-Practice-ForCrisis"><a href="#Phrase-amp-Practice-ForCrisis" class="headerlink" title="Phrase &amp; Practice- ForCrisis"></a>Phrase &amp; Practice- ForCrisis</h3><p><code>ahead of the curve</code>：at the forefront of or leading in sth. 领先</p>
<p>类似表达：</p>
<ul>
<li><code>take the lead</code>: to take a position that is ahead of others </li>
<li><code>in the lead</code>:in a position that is ahead of others</li>
<li><code>in/at the vanguard (of sth)</code>:in the most advanced position of development</li>
</ul>
<ol>
<li><p>选举前的民意调查确实显示，他遥遥领先。</p>
<p>The investigate did show that he was in the lead before the election.</p>
<p>改：<font color="red">Polls before the election did show he was well in the lead.</font></p>
</li>
<li><p>这家公司引领潮流，采用新技术。</p>
<p>The company is at the vanguard of new technology.</p>
<p>改：<font color="red">The company has been ahead of the curve in adopting new technologies.</font></p>
</li>
</ol>

</div></div>





<div><div class="fold_hider"><div class="close hider_title">OnlineShopping</div></div><div class="fold">
<h2 id="Online-Shopping"><a href="#Online-Shopping" class="headerlink" title="Online Shopping"></a>Online Shopping</h2><h3 id="Mindmap-online-shopping"><a href="#Mindmap-online-shopping" class="headerlink" title="Mindmap - online shopping"></a>Mindmap - online shopping</h3><div class="markmap-container" style="height:300px">
  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;Online Shopping&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;Para1：疫情改变了人们的购物习惯，网购成了常态&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;Para2~3：研究表明购物可以帮助人们放松精神&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;Para4~6：网购比线下购物更令人快乐的原因：量身定做流程使网购更便利、精确&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;Para7~8：解释产生这种快乐的原因不仅是人们更倾向于获得即时满足，而且与等快递的延时满足有关。&quot;}]}"></svg>
</div>


<h3 id="Phrase-amp-Practice-online-shopping"><a href="#Phrase-amp-Practice-online-shopping" class="headerlink" title="Phrase &amp; Practice- online shopping"></a>Phrase &amp; Practice- online shopping</h3><p><code>pick away at</code>：表示一点点去掉，一步步侵吞</p>
<p>类似表达：</p>
<p><code>eat away at sth</code>：to reduce or destroy sth gradually</p>
<p><code>chip away at</code>：to keep breaking small pieces off sth</p>
<p><code>corrode</code>：to destroy sth slowly, especially by chemical action; to be destroyed in this way</p>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3><ol>
<li><p>埋头苦干一项你痛恨的工作可能会逐渐侵蚀你的快乐。</p>
<p>Bending over in a work which you hate may eat away your happiness.</p>
<p>改：<font color="red">Toiling away at a job you hate may pick way your hapiness over time.</font></p>
</li>
<li><p>违规交易有损市场信心。</p>
<p>Transaction against the rule eat away at market confidence.</p>
<p>改：<font color="red">Crooked transanction corrode market confidence.</font></p>
<ul>
<li>crooked：a.畸形的，弯曲的，歪的</li>
</ul>
</li>
</ol>

</div></div>



<div><div class="fold_hider"><div class="close hider_title">Perfectionism</div></div><div class="fold">
<h2 id="Perfectionism"><a href="#Perfectionism" class="headerlink" title="Perfectionism"></a>Perfectionism</h2><h3 id="mindmap-Perfectionism"><a href="#mindmap-Perfectionism" class="headerlink" title="mindmap - Perfectionism"></a>mindmap - Perfectionism</h3><div class="markmap-container" style="height:300px">
  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;Perfectionism&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;before&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;Para1~2：引出话题 - 用面试问题引出主题：完美主义&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;Para3~7：完美主义在当下过时及其原因&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;Para3：完美主义在职场上风险大&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;Para4：完美主义不利于当下产品开发&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;Para5：完美主义过时的另一个原因是对员工福利的重视&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;Para6：完美主义的三种类型&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;Para7：完美主义对团队合作不利&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;Para8~9：不鼓励完美主义并不意味着牺牲高标准&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;after&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;Para1~3：引入 - 借用苏纳克事件引入对完美主义的探讨&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;Para4~7：完美主义的弊处&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;Para4：完美主义不利于产品开发&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;Para5~6：完美主义对员工心理健康不利&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[16,17]},&quot;v&quot;:&quot;Para7：完美主义不利于团队合作&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;Para8~9：完美主义也并不是一无是处&quot;}]}]}"></svg>
</div>


<h3 id="Phrase-amp-Practice-Perfectionism"><a href="#Phrase-amp-Practice-Perfectionism" class="headerlink" title="Phrase &amp; Practice - Perfectionism"></a>Phrase &amp; Practice - Perfectionism</h3><p><code>strive for</code>：to make a great effort to achieve something 努力，奋斗</p>
<p>类似表达：</p>
<ul>
<li><code>work hard for</code></li>
<li><code>shoot for</code></li>
</ul>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3><ol>
<li><p>我可以从她最近工作的努力程度看出她有多想晋升。</p>
<p>I can see how she wants to promoting from the degree of striving for work recently.</p>
<p>改：<font color="red">I could tell she was sreiving for that promotion by how hard she’d been working recently.</font></p>
</li>
<li><p>你应该该追求卓越，与此同时，追求完美是件愚蠢的事。</p>
<p>You should strive for excellent instead of seeking perfection which is foolish. </p>
<p>改：<font color="red">You should always strive for excellence, but striving for perfection is a fool’s errand.</font></p>
<ul>
<li><code>errand</code>：n.差事，差使，使命</li>
<li><code>fool&#39;s errand</code>：徒劳的奔波，徒劳无功的工作</li>
</ul>
</li>
</ol>

</div></div>



<div><div class="fold_hider"><div class="close hider_title">BeHappy</div></div><div class="fold">
<h2 id="BeHappy"><a href="#BeHappy" class="headerlink" title="BeHappy"></a>BeHappy</h2><h3 id="MindMap-BeHappy"><a href="#MindMap-BeHappy" class="headerlink" title="MindMap - BeHappy"></a>MindMap - BeHappy</h3><div class="markmap-container" style="height:300px">
  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;BeHappy&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;Para1~4 背景介绍：经济衰退迫在眉睫，甚至已经发生，让人们感到紧张和无助，而专注于问题解决也许不是最佳方案。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;Para 5~8 原理分析：幸福感和经济运行息息相关，且经济下行和对损失的顾虑相较于经济繁荣和经济收益更能影响人的情绪，从而引发恶性循环。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;Para 9~10 解决方案：一方面，虽然需要时间，但市场总会复苏；另一方面，无论经济繁荣或者萧条，保持情绪的相对稳定都会有所助益。&quot;}]}"></svg>
</div>


<h3 id="Phrase-amp-Practice-BeHappy"><a href="#Phrase-amp-Practice-BeHappy" class="headerlink" title="Phrase &amp; Practice- BeHappy"></a>Phrase &amp; Practice- BeHappy</h3><p><code>ride out</code>：安然渡过（难关）</p>
<p>类似表达：</p>
<ul>
<li><code>weather</code>：to come through a very difficult situation safely</li>
<li><code>come through</code>：to continue to live, be strong, or succeed after a difficult or dangerous time</li>
<li><code>survive</code>：to continue to live normally in spite of many problems</li>
</ul>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3><ol>
<li><p>经济衰退时期，许多公司没能渡过难关。</p>
<p>Many companies did not <del>come through</del><font color="red">manage to ride out</font> the <del>economic</del> recession.</p>
</li>
<li><p>24岁的麦迪逊·希尔正和男友在意大利佛罗伦萨的公寓里躲疫情。</p>
<p><del>24 years old</del> Madison Hill<font color="red">, 24, </font> is riding out the pandemic with her boyfriend in her <del>platform</del><font color="red">apartment</font> in Florence, Italy.</p>
</li>
</ol>

</div></div>



<div><div class="fold_hider"><div class="close hider_title">NudgeFactor</div></div><div class="fold">
<h2 id="Nudge-Factor"><a href="#Nudge-Factor" class="headerlink" title="Nudge Factor"></a>Nudge Factor</h2><h3 id="MindMap-NudgeFactor"><a href="#MindMap-NudgeFactor" class="headerlink" title="MindMap - NudgeFactor"></a>MindMap - NudgeFactor</h3><div class="markmap-container" style="height:300px">
  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;NudgeFactor&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;Para.1~4 助推理论的提出与流行&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;Para. 5~6 研究助力，Cohen&#39;s d 显著&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;Para. 7~12 研究成果遭多方质疑&quot;}]}"></svg>
</div>


<h3 id="Phrase-amp-Practice-NudgeFactor"><a href="#Phrase-amp-Practice-NudgeFactor" class="headerlink" title="Phrase &amp; Practice- NudgeFactor"></a>Phrase &amp; Practice- NudgeFactor</h3><p><code>soar</code>：if the value, amount or level of sth soars, it rises very quickly. 急升，猛增；[不及物动词]</p>
<p>类似表达：</p>
<ul>
<li><code>rocket</code>：to increase very quickly and suddenly 快速增长；猛增</li>
<li><code>shoot up</code>：if sth shoot up, it grows or increase very quickly. 快速成长，激增</li>
<li><code>leap</code>：to increase sudenly and by a large amount. 骤增；剧增</li>
</ul>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3><ol>
<li><p>纽约证券交易所股票暴涨。</p>
<p>The stocks of New York Stock Exchange soared.</p>
<p>改：<font color="red">Shares soared on the New York stock exchange. </font></p>
</li>
<li><p>同时，亚马逊的市场份额不断高涨。</p>
<p>Meanwhile,  Amazon‘s market share <del>shooting up continuely</del> <font color="red">continues to soar</font>.</p>
</li>
</ol>

</div></div>

<hr> 


<h1 id="week30"><a href="#week30" class="headerlink" title="week30"></a>week30</h1>

	<div class="row">
    <embed src="https://mesmalheurs.github.io/NewEnglish/Week30_20220723PDF.pdf" width="100%" height="550" type="application/pdf">
	</div>






<div><div class="fold_hider"><div class="close hider_title">ShavingLegs</div></div><div class="fold">
<h2 id="Shaving-legs"><a href="#Shaving-legs" class="headerlink" title="Shaving legs"></a>Shaving legs</h2><h3 id="MindMap-ShavingLegs"><a href="#MindMap-ShavingLegs" class="headerlink" title="MindMap - ShavingLegs"></a>MindMap - ShavingLegs</h3><div class="markmap-container" style="height:300px">
  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;Shaving legs&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;Para.1&amp;amp;2——引出话题&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;Para.1 20世纪初的女性不在意腿毛或腋毛&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;Para.2 在意面、颈和前臂等其他部位的毛发&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;Para.3~6 ——广告商的影响&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;Para.3 无袖连衣裙开始流行&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;Para.4 广告宣传脱毛膏&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;Para.5 技术支持，如剃须刀&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;Para.6 昙花一现，广告逐渐淡出视野&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;Para.7&amp;amp;8 —— “光腿”时代&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;Para.7 40年代脱毛成了标准&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;Para.8 50年代大多数女性刮除体毛&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;Para.9&amp;amp;10 —— 是否广告所迫&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;Para.9 不能光靠广告来解释&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;Para.10 刮腿毛、腋毛并非常态&quot;}]}]}"></svg>
</div>


<h3 id="phrase-ShavingLegs"><a href="#phrase-ShavingLegs" class="headerlink" title="phrase - ShavingLegs"></a>phrase - ShavingLegs</h3><ul>
<li><p><code>follow suit</code>：表示效仿</p>
<p>&#x3D; <code>follow in sb&#39;s footsteps</code>	效仿某人</p>
<p>&#x3D; <code>follow one&#39;s lead</code> 效仿；跟着；照样</p>
<p>&#x3D; <code>model oneself on sb</code> 效仿；以某人为榜样</p>
</li>
</ul>
<h3 id="practice-ShavingLegs"><a href="#practice-ShavingLegs" class="headerlink" title="practice - ShavingLegs"></a>practice - ShavingLegs</h3><ol>
<li><p>我希望此举能激励其他国家相继呼应。</p>
<p>I hope <del>the method can</del> <font color="red">this will</font> inspire other countries to follow suit.</p>
</li>
<li><p>可悲的是，英国政客不愿意跟随我们的引领。</p>
<p>It is sad that English politicians are reluctant to follow in our footsteps.</p>
<p><font color="red">改：Sadly, British politicians are unlikely to follow our lead.</font></p>
</li>
</ol>

</div></div>



<div><div class="fold_hider"><div class="close hider_title">Summer</div></div><div class="fold">
<h2 id="Summer"><a href="#Summer" class="headerlink" title="Summer"></a>Summer</h2><h3 id="MindMap-Summer"><a href="#MindMap-Summer" class="headerlink" title="MindMap - Summer"></a>MindMap - Summer</h3>
</div></div>



]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>NewEnglish</tag>
      </tags>
  </entry>
  <entry>
    <title>Poem</title>
    <url>/Poem/</url>
    <content><![CDATA[<h2 id="卡瓦菲斯"><a href="#卡瓦菲斯" class="headerlink" title="卡瓦菲斯"></a>卡瓦菲斯</h2><blockquote>
<p><strong>1903 年 12 月</strong></p>
<p>即使我不能谈及我的爱——</p>
<p>即使我不能说起你的头发、你的嘴唇、你的眼睛，</p>
<p>保存在我心中的你的脸庞</p>
<p>保存在我脑中的你的声音</p>
<p>以及在我梦中升起的九月的日子</p>
<p>仍然给我的言辞、我的句子以形状和色彩，</p>
<p>无论我触及什么题材，表达什么思想。</p>
</blockquote>
]]></content>
      <categories>
        <category>Literature</category>
      </categories>
      <tags>
        <tag>Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>Python</title>
    <url>/Python/</url>
    <content><![CDATA[<p>python 相关问题</p>
<span id="more"></span>



<h2 id="数据库迁移问题"><a href="#数据库迁移问题" class="headerlink" title="数据库迁移问题"></a>数据库迁移问题</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ORM类		migration目录		  数据库</span><br><span class="line">	makemigrations		 migrate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">开发者正常操作，想要修改数据库，不能手动去改数据字段必须通过ORM类+2个命令执行</span><br><span class="line"></span><br><span class="line">situation1：直接去数据库删除了某一列</span><br><span class="line">	step1：在ORM类中删除字段</span><br><span class="line">	step2：执行makemigrations，migrations目录生成配置去删除N字段</span><br><span class="line">	step3：执行migrate命令【报错，要去删除N字段，但是数据库中没有这个字段】</span><br><span class="line">			python manage.py migrate --fake</span><br><span class="line">			</span><br><span class="line">总结：</span><br><span class="line">	1. 三方保持一致，所有行为都是从ORM类开始。</span><br><span class="line">	2. migrate --fake使三方一致</span><br></pre></td></tr></table></figure>



<h2 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h2><ul>
<li>运行redis【D:\redis】</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd D:\redis</span><br><span class="line">redis-server.exe redis.windows.conf</span><br></pre></td></tr></table></figure>



<h2 id="Celery"><a href="#Celery" class="headerlink" title="Celery"></a>Celery</h2><ul>
<li><p>启动：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">celery worker: celery worker -A SelfStudy -l info -P eventlet</span><br><span class="line">django项目: 	  python manage.py runserver</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="django中应用celery"><a href="#django中应用celery" class="headerlink" title="django中应用celery"></a>django中应用celery</h4><p>之后，需要按照django-celery的要求进行编写代码。</p>
<ul>
<li><p>第一步：【项目&#x2F;项目&#x2F;settings.py 】添加配置</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">CELERY_BROKER_URL = <span class="string">&#x27;redis://192.168.16.85:6379&#x27;</span></span><br><span class="line">CELERY_ACCEPT_CONTENT = [<span class="string">&#x27;json&#x27;</span>]</span><br><span class="line">CELERY_RESULT_BACKEND = <span class="string">&#x27;redis://192.168.16.85:6379&#x27;</span></span><br><span class="line">CELERY_TASK_SERIALIZER = <span class="string">&#x27;json&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>第二步：【项目&#x2F;项目&#x2F;celery.py】在项目同名目录创建 celery.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> celery <span class="keyword">import</span> Celery</span><br><span class="line"></span><br><span class="line"><span class="comment"># set the default Django settings module for the &#x27;celery&#x27; program.</span></span><br><span class="line">os.environ.setdefault(<span class="string">&#x27;DJANGO_SETTINGS_MODULE&#x27;</span>, <span class="string">&#x27;demos.settings&#x27;</span>)</span><br><span class="line"></span><br><span class="line">app = Celery(<span class="string">&#x27;demos&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Using a string here means the worker doesn&#x27;t have to serialize</span></span><br><span class="line"><span class="comment"># the configuration object to child processes.</span></span><br><span class="line"><span class="comment"># - namespace=&#x27;CELERY&#x27; means all celery-related configuration keys</span></span><br><span class="line"><span class="comment">#   should have a `CELERY_` prefix.</span></span><br><span class="line">app.config_from_object(<span class="string">&#x27;django.conf:settings&#x27;</span>, namespace=<span class="string">&#x27;CELERY&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load task modules from all registered Django app configs.</span></span><br><span class="line"><span class="comment"># 去每个已注册app中读取 tasks.py 文件</span></span><br><span class="line">app.autodiscover_tasks()</span><br></pre></td></tr></table></figure>
</li>
<li><p>第三步，【项目&#x2F;app名称&#x2F;tasks.py】</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> celery <span class="keyword">import</span> shared_task</span><br><span class="line"></span><br><span class="line"><span class="meta">@shared_task</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line"></span><br><span class="line"><span class="meta">@shared_task</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mul</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="keyword">return</span> x * y</span><br></pre></td></tr></table></figure>
</li>
<li><p>第四步，【项目&#x2F;项目&#x2F;<code>__init__.py</code>】</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> .celery <span class="keyword">import</span> app <span class="keyword">as</span> celery_app</span><br><span class="line"></span><br><span class="line">__all__ = (<span class="string">&#x27;celery_app&#x27;</span>,)</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动worker</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">进入项目目录</span><br><span class="line"></span><br><span class="line">celery worker -A demos -l info -P eventlet</span><br></pre></td></tr></table></figure>
</li>
<li><p>编写视图函数，调用celery去创建任务。</p>
<ul>
<li><p>url</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">url(<span class="string">r&#x27;^create/task/$&#x27;</span>, task.create_task),</span><br><span class="line">url(<span class="string">r&#x27;^get/result/$&#x27;</span>, task.get_result),</span><br></pre></td></tr></table></figure>
</li>
<li><p>视图函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> api.tasks <span class="keyword">import</span> x1</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_task</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请求来了&#x27;</span>)</span><br><span class="line">    result = x1.delay(<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;执行完毕&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(result.<span class="built_in">id</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_result</span>(<span class="params">request</span>):</span><br><span class="line">    nid = request.GET.get(<span class="string">&#x27;nid&#x27;</span>)</span><br><span class="line">    <span class="keyword">from</span> celery.result <span class="keyword">import</span> AsyncResult</span><br><span class="line">    <span class="comment"># from demos.celery import app</span></span><br><span class="line">    <span class="keyword">from</span> demos <span class="keyword">import</span> celery_app</span><br><span class="line">    result_object = AsyncResult(<span class="built_in">id</span>=nid, app=celery_app)</span><br><span class="line">    <span class="comment"># print(result_object.status)</span></span><br><span class="line">    data = result_object.get()</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(data)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>启动django程序</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python manage.py ....</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>Expertise</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>SVN</title>
    <url>/SVN/</url>
    <content><![CDATA[<p>拉项目的步骤以及遇到的一些问题</p>
<span id="more"></span>



<h2 id="从服务器导入项目"><a href="#从服务器导入项目" class="headerlink" title="从服务器导入项目"></a>从服务器导入项目</h2><p>从svn上checkout：</p>
<ol>
<li><p>IDEA 找到 VCS-&gt;Checkout from Version Control-&gt;Subversion</p>
<p>或者在IDEA开始页面选择 Check out from Version Control (Subversion)</p>
</li>
<li><p>在弹出的对话框中点击 “+” 号，放入svn路径，点击确定</p>
<p>选中获取到的项目，点击Checkout即可</p>
</li>
<li><p>选择路径：文件夹的路径 + svn上的项目名称</p>
</li>
<li><p>format 默认1.8</p>
</li>
<li><p>普通ssm项目选“Create from existing source”</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“Import from external model”选项允许你导入一个已经存在的固定model的项目。例如Eclipse和Maven等。IDEA会根据你选择的model自动转换项目文件，换句话说就是把项目成功从原来的平台迁移到IDEA。</span><br><span class="line"></span><br><span class="line">“Create from existing source”选项会在已有的代码基础上创建新的IDEA项目，换句话说就是用IDEA自己的model。如果你只有一部分代码而没有完整的构建model的话，建议用这个选项。</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>Maven配置</p>
<p>File -&gt; setting -&gt; 搜索maven</p>
<ol>
<li>取消勾选 work offline，防止pom.xml不自动下载jar包</li>
<li>右击parent项目的pom.xml文件，选择maven -&gt; reload</li>
</ol>
<p>项目配置：Project Structure</p>
<ol>
<li><p>Project</p>
<ul>
<li>jdk 路径：修改为自己项目的jdk路径</li>
<li>jdk 版本：修改为自己的jdk版本</li>
</ul>
</li>
<li><p>Modules</p>
<ul>
<li>打开parent文件，在modules中add new module</li>
<li>language level 选择 jdk 版本</li>
</ul>
</li>
<li><p>Facets</p>
<ul>
<li>点击 + 号，选中所需功能点，其中如果选中web后，需修改web路径为自己web目录的路径</li>
</ul>
</li>
<li><p>Artifacts</p>
<ul>
<li>该功能模块为打包所需</li>
<li>“ + ”  -&gt;  Web Application：Exploded -&gt; from Modules</li>
</ul>
</li>
</ol>
<p>Tomcat 配置：</p>
<p>Add Configuration -&gt; Tomcat Server -&gt; Local</p>
<ul>
<li><p>Server：tomcat 版本、访问路径、JRE路径、端口号、默认浏览器</p>
</li>
<li><p>Deployment：点击+号，选择Artifacts，Applicatiion context 改为自己项目使用名称</p>
</li>
</ul>
<p>注意：URL确认要和项目路径保持一致，不然前后端分离项目，前端访问后端会报404</p>
<h2 id="other"><a href="#other" class="headerlink" title="other"></a>other</h2><h3 id="Maven的root问题"><a href="#Maven的root问题" class="headerlink" title="Maven的root问题"></a>Maven的root问题</h3><p>idea右侧的maven标签会显示 (root) ，一般是parent模块</p>
<p>原因是<code>pom.xml</code>里面加入了子模块的依赖，最高层父模块后面就会显示root</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>dao<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>model<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>service<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>webmanager<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="Could-not-transfer-artifact-xxx-xxx-pom-3-2-from-x2F-to-maven-releases的问题解决"><a href="#Could-not-transfer-artifact-xxx-xxx-pom-3-2-from-x2F-to-maven-releases的问题解决" class="headerlink" title="Could not transfer artifact xxx:xxx:pom:3.2 from&#x2F;to maven-releases的问题解决"></a>Could not transfer artifact xxx:xxx:pom:3.2 from&#x2F;to maven-releases的问题解决</h3><p>情况有两种：</p>
<ol>
<li><p>maven仓库没有依赖包，可以搜索相应依赖包版本，下载之后通过maven命令导入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># maven 命令</span><br><span class="line">mvn install:install-file -DgroupId=io.github.swagger2markup  -DartifactId=swagger2markup -Dversion=1.1.0  -Dfile=D:\swagger2markup-1.1.0.jar -Dpackaging=jar</span><br><span class="line"></span><br><span class="line"># DgroupId 和 ArtifactID 分别是下载依赖包时候可以查看，或者 pom 文件中可以查看</span><br><span class="line"># Dfile 是下载后 jar 包在磁盘中的路径</span><br></pre></td></tr></table></figure>


</li>
<li><p>maven 仓库有依赖包，但是 idea 构建、打包，install 或者执行 maven 插件的时候还是报上面那个错误，有可能是因为maven 对应的目录中存在一个的文件 <strong>_remote.repositories</strong>，把这个文件删除了即可。</p>
</li>
</ol>
<h3 id="java-lang-IllegalArgumentException-找到多个名为spring-web的片段"><a href="#java-lang-IllegalArgumentException-找到多个名为spring-web的片段" class="headerlink" title="java.lang.IllegalArgumentException: 找到多个名为spring_web的片段"></a>java.lang.IllegalArgumentException: 找到多个名为spring_web的片段</h3><p>产生的原因有两点：</p>
<p>1.依赖冲突，解决冲突就行。<br>2.spring的web包和webmvc包冲突，webmvc中包含了这个web的jar。</p>
<p>【解决】：web.xml配置，直接在标签下方添加标签</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">display-name</span>&gt;</span><span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># 新增：</span><br><span class="line"><span class="tag">&lt;<span class="name">absolute-ordering</span> /&gt;</span></span><br></pre></td></tr></table></figure>





<h3 id="java-lang-IllegalStateException-ContainerBase-addChild-start-org-apache-catalina-LifecycleException"><a href="#java-lang-IllegalStateException-ContainerBase-addChild-start-org-apache-catalina-LifecycleException" class="headerlink" title="java.lang.IllegalStateException: ContainerBase.addChild: start: org.apache.catalina.LifecycleException"></a>java.lang.IllegalStateException: ContainerBase.addChild: start: org.apache.catalina.LifecycleException</h3><p>【原因】：application启动类中嵌入的tomcat与部署war的tomcat冲突引发的，需要在pom.xml添加配置，来避免冲突</p>
<p>【解决】：Tomcat 配置文件中</p>
<p>​	<code>tomcat.util.scan.DefaultJarScanner.jarsToSkip=\</code> 值后面加”<code>,*</code>“</p>
<p>​	或者下面这样：</p>
<p>​	<code>tomcat.util.scan.StandardJarScanFilter.jarsToSkip=,*</code></p>
]]></content>
      <categories>
        <category>Configuration</category>
      </categories>
      <tags>
        <tag>svn</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows</title>
    <url>/Windows/</url>
    <content><![CDATA[<p>一些windows终端命令的问题</p>
<span id="more"></span>



<h2 id="port"><a href="#port" class="headerlink" title="port"></a>port</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看tomcat configuration 的 debug 端口号（56184）</span><br><span class="line"># 终端查找被占用的端口：</span><br><span class="line">netstat -ano|findstr &quot;56184&quot;</span><br><span class="line"># 最后一列为pid</span><br><span class="line">taskkill -f -pid 26928</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Configuration</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
</search>
